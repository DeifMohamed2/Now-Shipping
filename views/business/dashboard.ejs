<%- contentFor('HeaderCss') %>
<link rel="stylesheet" href="/assets/rCSS/business.css">
<link rel="stylesheet" href="/assets/libs/filepond/filepond.min.css" type="text/css" />
<link rel="stylesheet" href="/assets/libs/filepond-plugin-image-preview/filepond-plugin-image-preview.min.css">
<style>
  :root {
    --primary-color: #F39720;
    --secondary-color: #FDB614;
    --primary-light: rgba(243, 151, 32, 0.1);
    --primary-medium: rgba(243, 151, 32, 0.5);
    --secondary-light: rgba(253, 182, 20, 0.1);
    --dark-color: #333333;
    --dark-secondary: #555555;
    --neutral-light: #f8f9fa;
    --neutral-medium: #e9ecef;
  }

  /* Custom styles */
  .completed {
    color: var(--primary-color);
    border: 2px solid var(--primary-color);
    border-radius: 50%;
  }

  .payment-box {
    display: none;
  }

  .payment-box.d-none {
    display: none;
  }

  /* Highlight selected payment and brand options */
  .payment-option.active,
  .brand-option.active {
    border: 2px solid var(--primary-color);
    box-shadow: 0 0 10px rgba(243, 151, 32, 0.2);
    transform: translateY(-3px);
    transition: all 0.3s ease;
  }

  /* Bootstrap invalid field styling */
  .is-invalid {
    border-color: #dc3545;
  }

  /* Step navigation styling */
  .nav-link {
    position: relative;
    padding: 1rem 1.5rem;
    margin-bottom: 0.5rem;
    border-radius: 0.5rem;
    transition: all 0.3s ease;
    color: var(--dark-color);
  }

  .nav-link:hover {
    background-color: var(--neutral-light);
  }

  .nav-link.active {
    background-color: var(--primary-light);
    color: var(--primary-color);
    font-weight: 600;
  }

  .step-title {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    margin-right: 0.75rem;
  }

  .step-icon {
    font-size: 1.25rem;
  }

  /* Form styling */
  .form-label {
    font-weight: 500;
    margin-bottom: 0.5rem;
    color: var(--dark-color);
  }

  .card {
    transition: all 0.3s ease;
    border-radius: 0.75rem;
    border: 1px solid rgba(0, 0, 0, 0.1);
    background-color: #fff;
  }

  .card:hover {
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
  }

  /* Button styling */
  .btn {
    padding: 0.6rem 1.5rem;
    font-weight: 500;
    border-radius: 0.5rem;
    transition: all 0.3s ease;
  }

  .btn-primary-custom {
    background-color: var(--primary-color);
    border-color: var(--primary-color);
    color: #fff;
  }

  .btn-primary-custom:hover {
    background-color: var(--secondary-color);
    border-color: var(--secondary-color);
    transform: translateY(-2px);
    box-shadow: 0 5px 10px rgba(243, 151, 32, 0.2);
  }

  .btn-dark-custom {
    background-color: var(--dark-color);
    border-color: var(--dark-color);
    color: #fff;
  }

  .btn-dark-custom:hover {
    background-color: var(--dark-secondary);
    border-color: var(--dark-secondary);
    transform: translateY(-2px);
    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1);
  }

  .btn-outline-secondary {
    color: var(--dark-secondary);
    border-color: #ced4da;
  }

  .btn-outline-secondary:hover {
    background-color: var(--neutral-light);
    color: var(--dark-color);
    border-color: var(--dark-secondary);
    transform: translateY(-2px);
    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.05);
  }

  /* Upload progress styling */
  .upload-progress {
    height: 6px;
    border-radius: 3px;
    background-color: var(--neutral-medium);
    margin-top: 0.5rem;
    overflow: hidden;
  }

  .upload-progress-bar {
    height: 100%;
    background-color: var(--primary-color);
    transition: width 0.3s ease;
  }

  /* Photo count badge */
  .photo-count {
    display: inline-flex;
    align-items: center;
    padding: 0.35rem 0.75rem;
    font-size: 0.75rem;
    font-weight: 600;
    line-height: 1;
    color: #fff;
    background-color: var(--dark-color);
    border-radius: 2rem;
  }

  .photo-count i {
    margin-right: 0.25rem;
  }

  /* Dashboard styling */
  .dashboard-card {
    border-radius: 1rem;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
    transition: all 0.3s ease;
    overflow: hidden;
  }

  .dashboard-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
  }

  .dashboard-card .card-header {
    background-color: var(--neutral-light);
    border-bottom: 1px solid rgba(0, 0, 0, 0.05);
  }

  .dashboard-card .card-title {
    color: var(--dark-color);
    font-weight: 600;
  }

  .dashboard-stat-card {
    border-radius: 1rem;
    overflow: hidden;
    transition: all 0.3s ease;
    border: 1px solid rgba(0, 0, 0, 0.05);
  }

  .dashboard-stat-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.08);
  }

  .dashboard-stat-card .card-body {
    padding: 1.5rem;
  }

  .dashboard-stat-card .avatar-title {
    background-color: var(--neutral-light);
    color: var(--dark-color);
  }

  .text-primary-custom {
    color: var(--primary-color) !important;
  }

  .text-dark-custom {
    color: var(--dark-color) !important;
  }

  .bg-primary-custom {
    background-color: var(--primary-color) !important;
  }

  .bg-primary-light-custom {
    background-color: var(--primary-light) !important;
  }

  .bg-dark-custom {
    background-color: var(--dark-color) !important;
  }

  .bg-neutral-light {
    background-color: var(--neutral-light) !important;
  }

  .border-primary-custom {
    border-color: var(--primary-color) !important;
  }

  .order-status {
    display: inline-block;
    padding: 0.25rem 0.75rem;
    border-radius: 2rem;
    font-size: 0.75rem;
    font-weight: 600;
  }

  .order-status.delivered {
    background-color: rgba(10, 179, 156, 0.1);
    color: #0ab39c;
  }

  .order-status.pending {
    background-color: var(--primary-light);
    color: var(--primary-color);
  }

  .order-status.processing {
    background-color: rgba(64, 81, 137, 0.1);
    color: #405189;
  }

  .order-status.cancelled {
    background-color: rgba(220, 53, 69, 0.1);
    color: #dc3545;
  }

  /* Social media link inputs */
  .social-link-input {
    display: none;
    margin-top: 0.5rem;
    padding: 0.5rem;
    border-radius: 0.5rem;
    background-color: var(--neutral-light);
  }

  .social-link-input.active {
    display: block;
  }
    /* Badge styles */
    .badge {
    font-weight: 500;
    padding: 0.35em 0.65em;
    border-radius: 0.25rem;
    }

    .bg-warning-light {
    background-color: rgba(255, 193, 7, 0.1);
    }

    .text-warning {
    color: #ffc107 !important;
    }

    /* Card border styles */
    .card.border-start {
    overflow: hidden;
    }

    /* Progress bar */
    .progress {
    background-color: var(--neutral-medium);
    border-radius: 0.5rem;
    overflow: hidden;
    }

    /* Avatar styles */
    .avatar-sm {
    height: 2.5rem;
    width: 2.5rem;
    }

    .avatar-title {
    align-items: center;
    display: flex;
    font-weight: 500;
    height: 100%;
    justify-content: center;
    width: 100%;
    }

    .rounded-circle {
    border-radius: 50% !important;
    }

    /* Card hover effect */
    .card.border:hover {
    transform: translateY(-3px);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
    transition: all 0.3s ease;
    }
</style>



<%- contentFor('body') %>
<!-- Verifications -->
<div class="row">
  <% if (!user.isCompleted) { %>
  <div class="col-xl-12">
    <div class="card card_verification">
      <div class="card-header">
        <h4 class="card-title mb-0">Account activation steps</h4>
      </div>
      <!-- end card header -->
      <div class="card-body form-steps">
        <form class="vertical-navs-step" id="verificationForm">
          <div class="row gy-5">
            <div class="col-lg-3">
              <div class="nav flex-column custom-nav nav-pills" role="tablist" aria-orientation="vertical">
                <button class="nav-link active" id="v-pills-bill-info-tab" data-bs-toggle="pill" data-bs-target="#v-pills-bill-info" type="button" role="tab" aria-controls="v-pills-bill-info" aria-selected="true">
                  <span class="step-title me-2">
                    <i class="ri-<%= user.isVerified ? 'check' : 'close' %>-circle-fill step-icon me-2 <%= user.isVerified ? 'text-primary-custom' : '' %>"></i> Step 1
                  </span>
                  Email Verification
                </button>
                <button class="nav-link <%= user.isVerified ? '' : 'disabled' %>" id="v-pills-brand-info-tab" data-bs-toggle="pill" data-bs-target="#v-pills-brand-info" type="button" role="tab" aria-controls="v-pills-brand-info" aria-selected="false" <%= user.isVerified ? '' : 'disabled' %>>
                  <span class="step-title me-2">
                    <i class="ri-close-circle-fill step-icon me-2"></i> Step 2
                  </span>
                  Brand Info
                </button>
                <button class="nav-link <%= user.isVerified ? '' : 'disabled' %>" id="v-pills-pickUp-tab" data-bs-toggle="pill" data-bs-target="#v-pills-location" type="button" role="tab" aria-controls="v-pills-location" aria-selected="false" <%= user.isVerified ? '' : 'disabled' %>>
                  <span class="step-title me-2">
                    <i class="ri-close-circle-fill step-icon me-2"></i> Step 3
                  </span>
                  PickUp Address
                </button>
                <button class="nav-link <%= user.isVerified ? '' : 'disabled' %>" id="v-pills-payment-tab" data-bs-toggle="pill" data-bs-target="#v-payment-method" type="button" role="tab" aria-controls="v-payment-method" aria-selected="false" <%= user.isVerified ? '' : 'disabled' %>>
                  <span class="step-title me-2">
                    <i class="ri-close-circle-fill step-icon me-2"></i> Step 4
                  </span>
                  Payment Method
                </button>
                <button class="nav-link <%= user.isVerified ? '' : 'disabled' %>" id="v-pills-brand-type-tab" data-bs-toggle="pill" data-bs-target="#v-brand-type" type="button" role="tab" aria-controls="v-brand-type" aria-selected="false" <%= user.isVerified ? '' : 'disabled' %>>
                  <span class="step-title me-2">
                    <i class="ri-close-circle-fill step-icon me-2"></i> Step 5
                  </span>
                  Brand Type
                </button>
                <button class="nav-link <%= user.isVerified ? '' : 'disabled' %>" id="v-pills-finish-tab" data-bs-toggle="pill" data-bs-target="#v-pills-finish" type="button" role="tab" aria-controls="v-pills-finish" aria-selected="false" <%= user.isVerified ? '' : 'disabled' %>>
                  <span class="step-title me-2">
                    <i class="ri-close-circle-fill step-icon me-2"></i> Step 6
                  </span>
                  Finish
                </button>
              </div>
              <!-- end nav -->
            </div>
            <!-- end col-->
            <div class="col-lg-9">
              <div class="px-lg-4">
                <div class="tab-content">
                  <!-- Step 1: Email Verification -->
                  <div class="tab-pane fade show active text-center p-4" id="v-pills-bill-info" role="tabpanel" aria-labelledby="v-pills-bill-info-tab">
                    <% if (user.isVerified) { %>
                    <div class="mb-3">
                      <h4 class="fw-bold">Email Verified</h4>
                      <p class="text-muted">Your email has been successfully verified.</p>
                    </div>
                    <div class="mb-4">
                      <lord-icon src="https://cdn.lordicon.com/lupuorrc.json" trigger="loop" colors="primary:#F39720,secondary:#333333" style="width:120px;height:120px"></lord-icon>
                    </div>
                    <button type="button" class="btn btn-primary-custom nexttab" data-nexttab="v-pills-brand-info-tab">
                      Continue <i class="ri-arrow-right-line label-icon align-middle fs-16 ms-2"></i>
                    </button>
                    <% } else { %>
                    <div class="mb-3">
                      <h4 class="fw-bold">Email Verification</h4>
                      <p class="text-muted">Click the button below to verify your email via Gmail</p>
                    </div>
                    <button type="button" class="btn btn-dark-custom btn-lg d-flex align-items-center mx-auto shadow-sm" id="sendVerificationEmail">
                      <i class="ri-mail-fill fs-5 me-2"></i> Send Verification Email
                    </button>
                    <% } %>
                  </div>
                  <!-- Step 2: Brand Info -->
                  <div class="tab-pane fade p-4" id="v-pills-brand-info" role="tabpanel" aria-labelledby="v-pills-brand-info-tab">
                    <div class="mb-4">
                      <h4 class="fw-bold">Brand Profile</h4>
                      <p class="text-muted">Add your business details</p>
                    </div>
                    <div class="mb-3">
                      <label for="brandName" class="form-label fw-semibold">Brand Name</label>
                      <input type="text" class="form-control" id="brandName" name="brandName" placeholder="Enter your brand name" required>
                    </div>
                    <div class="row g-3">
                      <div class="col-md-6">
                        <label for="industry" class="form-label fw-semibold">Industry</label>
                        <select class="form-select" id="industry" name="industry" required>
                          <option value="">Select an industry...</option>
                          <option>Books, Arts & Media</option>
                          <option>Fashion & Clothing</option>
                          <option>Electronics</option>
                          <option>Health & Beauty</option>
                          <option>Home & Furniture</option>
                          <option>Other</option>
                        </select>
                      </div>
                      <div class="col-md-6">
                        <label for="orderSize" class="form-label fw-semibold">Monthly Order Volume</label>
                        <select class="form-select" id="orderSize" name="monthlyOrders" required>
                          <option value="">Select...</option>
                          <option>1 - 10</option>
                          <option>11 - 50</option>
                          <option>51 - 200</option>
                          <option>201 - 1000</option>
                          <option>1000+</option>
                        </select>
                      </div>
                    </div>
                    <div class="mt-4">
                      <h5 class="fw-bold">Where do you sell your products?</h5>
                      <p class="text-muted">Select all the sales channels you use.</p>
                    </div>
                    <div class="row g-3">
                      <div class="col-md-6">
                        <div class="card p-3">
                          <div class="form-check">
                            <input class="form-check-input channel-checkbox" type="checkbox" id="instagram" name="sellingPoints[]" value="instagram" data-channel="instagram">
                            <label class="form-check-label d-flex align-items-center" for="instagram">
                              <i class="ri-instagram-line me-2 fs-5 text-danger"></i> Instagram
                            </label>
                            <div class="social-link-input" id="instagram-link-input">
                              <label for="instagram-link" class="form-label">Instagram Profile URL</label>
                              <input type="url" class="form-control" id="instagram-link" name="instagramLink" placeholder="https://instagram.com/yourbrand">
                            </div>
                          </div>
                          <div class="form-check mt-2">
                            <input class="form-check-input channel-checkbox" type="checkbox" id="tiktok" name="sellingPoints[]" value="tiktok" data-channel="tiktok">
                            <label class="form-check-label d-flex align-items-center" for="tiktok">
                              <i class="ri-tiktok-line me-2 fs-5 text-dark"></i> TikTok
                            </label>
                            <div class="social-link-input" id="tiktok-link-input">
                              <label for="tiktok-link" class="form-label">TikTok Profile URL</label>
                              <input type="url" class="form-control" id="tiktok-link" name="tiktokLink" placeholder="https://tiktok.com/@yourbrand">
                            </div>
                          </div>
                          <div class="form-check mt-2">
                            <input class="form-check-input channel-checkbox" type="checkbox" id="woocommerce" name="sellingPoints[]" value="woocommerce" data-channel="woocommerce">
                            <label class="form-check-label d-flex align-items-center" for="woocommerce">
                              <i class="ri-store-2-line me-2 fs-5 text-primary"></i> WooCommerce
                            </label>
                            <div class="social-link-input" id="woocommerce-link-input">
                              <label for="woocommerce-link" class="form-label">WooCommerce Store URL</label>
                              <input type="url" class="form-control" id="woocommerce-link" name="woocommerceLink" placeholder="https://yourstore.com">
                            </div>
                          </div>
                          <div class="form-check mt-2">
                            <input class="form-check-input channel-checkbox" type="checkbox" id="customWebsite" name="sellingPoints[]" value="customWebsite" data-channel="customWebsite">
                            <label class="form-check-label d-flex align-items-center" for="customWebsite">
                              <i class="ri-global-line me-2 fs-5 text-secondary"></i> Custom Website
                            </label>
                            <div class="social-link-input" id="customWebsite-link-input">
                              <label for="website-link" class="form-label">Website URL</label>
                              <input type="url" class="form-control" id="website-link" name="websiteLink" placeholder="https://yourwebsite.com">
                            </div>
                          </div>
                        </div>
                      </div>
                      <div class="col-md-6">
                        <div class="card p-3">
                          <div class="form-check">
                            <input class="form-check-input channel-checkbox" type="checkbox" id="facebookShop" name="sellingPoints[]" value="facebookShop" data-channel="facebookShop">
                            <label class="form-check-label d-flex align-items-center" for="facebookShop">
                              <i class="ri-facebook-circle-line me-2 fs-5 text-primary"></i> Facebook Shop
                            </label>
                            <div class="social-link-input" id="facebookShop-link-input">
                              <label for="facebook-shop-link" class="form-label">Facebook Shop URL</label>
                              <input type="url" class="form-control" id="facebook-shop-link" name="facebookShopLink" placeholder="https://facebook.com/yourbrand/shop">
                            </div>
                          </div>
                          <div class="form-check mt-2">
                            <input class="form-check-input channel-checkbox" type="checkbox" id="facebookMessenger" name="sellingPoints[]" value="facebookMessenger" data-channel="facebookMessenger">
                            <label class="form-check-label d-flex align-items-center" for="facebookMessenger">
                              <i class="ri-messenger-line me-2 fs-5 text-info"></i> Facebook Messenger
                            </label>
                            <div class="social-link-input" id="facebookMessenger-link-input">
                              <label for="messenger-link" class="form-label">Facebook Page URL</label>
                              <input type="url" class="form-control" id="messenger-link" name="messengerLink" placeholder="https://facebook.com/yourbrand">
                            </div>
                          </div>
                          <div class="form-check mt-2">
                            <input class="form-check-input channel-checkbox" type="checkbox" id="shopify" name="sellingPoints[]" value="shopify" data-channel="shopify">
                            <label class="form-check-label d-flex align-items-center" for="shopify">
                              <i class="ri-shopping-cart-line me-2 fs-5 text-success"></i> Shopify
                            </label>
                            <div class="social-link-input" id="shopify-link-input">
                              <label for="shopify-link" class="form-label">Shopify Store URL</label>
                              <input type="url" class="form-control" id="shopify-link" name="shopifyLink" placeholder="https://yourstore.myshopify.com">
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                    <div class="d-flex align-items-start gap-3 mt-4">
                      <button type="button" class="btn btn-outline-secondary previestab" data-previous="v-pills-bill-info-tab">
                        <i class="ri-arrow-left-line label-icon align-middle fs-16 me-2"></i> Back to Email Verification
                      </button>
                      <button type="button" class="btn btn-primary-custom ms-auto nexttab" data-nexttab="v-pills-pickUp-tab">
                        Continue <i class="ri-arrow-right-line label-icon align-middle fs-16 ms-2"></i>
                      </button>
                    </div>
                  </div>

                  <!-- Step 3: PickUp Address -->
                  <div class="tab-pane fade" id="v-pills-location" role="tabpanel" aria-labelledby="v-pills-pickUp-tab">
                    <div>
                      <h5>Choose Location</h5>
                      <p class="text-muted">Select your preferred location for receiving orders.</p>
                    </div>
                    <div class="mb-3">
                      <button type="button" class="btn btn-dark-custom" data-bs-toggle="modal" data-bs-target="#locationModal">
                        Select Location on Map
                      </button>
                    </div>
                    <div class="row g-3">
                      <div class="col-md-12">
                        <label for="country" class="form-label">Country</label>
                        <select class="form-select" id="country" name="country" required>
                          <option value="" selected disabled>Select Country</option>
                          <option value="egypt">Egypt</option>
                        </select>
                      </div>
                      <div class="col-md-12">
                        <label for="region" class="form-label">Region</label>
                        <select class="form-select" name="city" id="region" required>
                          <option value="">Select Region...</option>
                          <option value="Helwan">Helwan</option>
                          <option value="Nasr City">Nasr City</option>
                          <option value="6th of October">6th of October</option>
                          <option value="Shubra">Shubra</option>
                          <option value="Maadi">Maadi</option>
                          <option value="Zamalek">Zamalek</option>
                          <option value="Haram">Haram</option>
                          <option value="Dokki">Dokki</option>
                          <option value="Mohandessin">Mohandessin</option>
                          <option value="New Cairo">New Cairo</option>
                          <option value="Obour City">Obour City</option>
                          <option value="Badr City">Badr City</option>
                          <option value="10th of Ramadan">10th of Ramadan</option>
                          <option value="Sheikh Zayed">Sheikh Zayed</option>
                          <option value="Mokattam">Mokattam</option>
                          <option value="Garden City">Garden City</option>
                          <option value="Hadayek El-Kobba">Hadayek El-Kobba</option>
                          <option value="Ain Shams">Ain Shams</option>
                          <option value="El-Marg">El-Marg</option>
                          <option value="El-Mataria">El-Mataria</option>
                          <option value="El-Nozha">El-Nozha</option>
                          <option value="El-Salam City">El-Salam City</option>
                          <option value="El-Shorouk City">El-Shorouk City</option>
                          <option value="El-Tagamoa">El-Tagamoa</option>
                          <option value="El-Waily">El-Waily</option>
                          <option value="Hadayek Helwan">Hadayek Helwan</option>
                          <option value="Heliopolis">Heliopolis</option>
                          <option value="Masr El-Gedida">Masr El-Gedida</option>
                          <option value="Zaytoun">Zaytoun</option>
                          <!-- Add other zones as needed -->
                        </select>
                      </div>
                      <div class="col-md-12">
                        <label for="address-details" class="form-label">Address Details</label>
                        <input type="text" class="form-control" name="adressDetails" id="address-details" placeholder="Street, Building, Floor, Apartment" required>
                      </div>
                      <div class="col-md-12">
                        <label for="landmark" class="form-label">Nearby Landmark (Optional)</label>
                        <input type="text" class="form-control" name="nearbyLandmark" id="landmark" placeholder="e.g. Near the school">
                      </div>
                      <div class="col-md-12">
                        <label for="pickup-phone" class="form-label">Pickup Phone Number</label>
                        <input type="tel" class="form-control" name="pickupPhone" id="pickup-phone" placeholder="e.g. +20 123 456 7890" required>
                      </div>
                    </div>
                    <div class="modal fade" id="locationModal" tabindex="-1" aria-labelledby="locationModalLabel" aria-hidden="true">
                      <div class="modal-dialog modal-lg">
                        <div class="modal-content">
                          <div class="modal-header">
                            <h5 class="modal-title" id="locationModalLabel">Select Location</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                          </div>
                          <div class="modal-body">
                            <div id="map" style="width: 100%; height: 400px;"></div>
                          </div>
                          <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            <button type="button" class="btn btn-primary-custom" id="confirmLocation">Confirm Location</button>
                          </div>
                        </div>
                      </div>
                    </div>
                    <div class="d-flex align-items-start gap-3 mt-4">
                      <button type="button" class="btn btn-outline-secondary previestab" data-previous="v-pills-brand-info-tab">
                        <i class="ri-arrow-left-line label-icon align-middle fs-16 me-2"></i> Back to Brand Info
                      </button>
                      <button type="button" class="btn btn-primary-custom ms-auto nexttab" data-nexttab="v-pills-payment-tab">
                        Continue <i class="ri-arrow-right-line label-icon align-middle fs-16 ms-2"></i>
                      </button>
                    </div>
                  </div>


                  <!-- Step 4: Payment Method -->
                  <div class="tab-pane fade p-4" id="v-payment-method" role="tabpanel" aria-labelledby="v-pills-payment-tab">
                    <div class="mb-4">
                      <h4 class="fw-bold">Select Payment Method</h4>
                      <p class="text-muted">Choose your preferred payment option for checkout.</p>
                    </div>
                    <div class="row g-3">
                      <!-- InstaPay -->
                      <div class="col-md-4">
                        <div class="card p-3 text-center payment-option" data-value="instapay">
                          <input class="form-check-input d-none payment-radio" type="radio" name="paymentMethod" id="instapay" value="instaPay" required>
                          <label class="form-check-label" for="instapay">
                            <i class="ri-smartphone-line fs-2 mb-2 text-primary-custom"></i>
                            <h5>InstaPay</h5>
                          </label>
                        </div>
                      </div>
                      <!-- Mobile Wallet -->
                      <div class="col-md-4">
                        <div class="card p-3 text-center payment-option" data-value="mobileWallet">
                          <input class="form-check-input d-none payment-radio" type="radio" name="paymentMethod" id="mobileWallet" value="mobileWallet" required>
                          <label class="form-check-label" for="mobileWallet">
                            <i class="ri-wallet-line fs-2 mb-2 text-dark-custom"></i>
                            <h5>Mobile Wallet</h5>
                          </label>
                        </div>
                      </div>
                      <!-- Bank Transfer -->
                      <div class="col-md-4">
                        <div class="card p-3 text-center payment-option" data-value="bankTransfer">
                          <input class="form-check-input d-none payment-radio" type="radio" name="paymentMethod" id="bankTransfer" value="bankTransfer" required>
                          <label class="form-check-label" for="bankTransfer">
                            <i class="ri-bank-line fs-2 mb-2 text-dark-secondary"></i>
                            <h5>Bank Transfer</h5>
                          </label>
                        </div>
                      </div>
                    </div>
                    <!-- Payment Details Section -->
                    <div id="paymentDetails" class="mt-4" style="display: none;">
                      <!-- InstaPay Input -->
                      <div id="instapayDetails" class="payment-detail" style="display: none;">
                        <label for="ipaAddress" class="form-label">Enter your IPA Address:</label>
                        <input type="text" id="ipaAddress" name="IPAorPhoneNumber" class="form-control" placeholder="Example: ABCD1234">
                      </div>
                      <!-- Mobile Wallet Input -->
                      <div id="mobileWalletDetails" class="payment-detail" style="display: none;">
                        <label for="mobileNumber" class="form-label">Enter your Mobile Number:</label>
                        <input type="text" id="mobileNumber" name="mobileWalletNumber" class="form-control" placeholder="Example: +201234567890">
                      </div>
                      <!-- Bank Transfer Inputs -->
                      <div id="bankTransferDetails" class="payment-detail" style="display: none;">
                        <label for="bankSelect" class="form-label">Select Your Bank:</label>
                        <select id="bankSelect" class="form-select" name="bankName">
                          <option value="">Choose your bank</option>
                          <option value="nbe">National Bank of Egypt</option>
                          <option value="cib">CIB (Commercial International Bank)</option>
                          <option value="qnb">QNB Alahli</option>
                          <option value="hsbc">HSBC</option>
                          <option value="saib">SAIB Bank</option>
                        </select>
                        <label for="ibanNumber" class="form-label mt-3">Enter your IBAN:</label>
                        <input type="text" id="ibanNumber" class="form-control" name="IBAN" placeholder="Example: EG12 3456 7890 1234 5678 90">
                        <label for="accountName" class="form-label mt-3">Enter your Account Name:</label>
                        <input type="text" id="accountName" class="form-control" name="accountName" placeholder="Example: John Doe">
                      </div>
                    </div>
                    <div class="d-flex align-items-start gap-3 mt-4">
                      <button type="button" class="btn btn-outline-secondary previestab" data-previous="v-pills-pickUp-tab">
                        <i class="ri-arrow-left-line label-icon align-middle fs-16 me-2"></i> Back to Location
                      </button>
                      <button type="button" class="btn btn-primary-custom ms-auto nexttab" data-nexttab="v-pills-brand-type-tab">
                        Continue <i class="ri-arrow-right-line label-icon align-middle fs-16 ms-2"></i>
                      </button>
                    </div>
                  </div>

                  <!-- Step 5: Brand Type -->
                  <div class="tab-pane fade p-4" id="v-brand-type" role="tabpanel" aria-labelledby="v-pills-brand-type-tab">
                    <div class="mb-4">
                      <h4 class="fw-bold">Brand Type</h4>
                      <p class="text-muted">Select the type of your brand.</p>
                    </div>
                    <div class="row g-3">
                      <!-- Personal -->
                      <div class="col-md-6">
                        <div class="card p-3 text-center brand-option" data-value="personal">
                          <input class="form-check-input d-none brand-radio" type="radio" name="brandType" id="brandType1" value="personal" required>
                          <label class="form-check-label" for="brandType1">
                            <i class="ri-user-line fs-2 mb-2 text-primary-custom"></i>
                            <h5>Personal</h5>
                          </label>
                        </div>
                      </div>
                      <!-- Company -->
                      <div class="col-md-6">
                        <div class="card p-3 text-center brand-option" data-value="company">
                          <input class="form-check-input d-none brand-radio" type="radio" name="brandType" id="brandType2" value="company" required>
                          <label class="form-check-label" for="brandType2">
                            <i class="ri-building-line fs-2 mb-2 text-dark-custom"></i>
                            <h5>Company</h5>
                          </label>
                        </div>
                      </div>
                    </div>
                    <!-- Personal Fields -->
                    <div id="personalFields" class="mt-4" style="display: none;">
                      <label for="nationalIdNumber" class="form-label">Enter your National ID Number:</label>
                      <input type="text" id="nationalIdNumber" class="form-control" name="nationalId" placeholder="Example: 29811234567890" required>
                      <label for="nationalIdUpload" class="form-label mt-3">Upload National ID:</label>
                      <div class="col-lg-12">
                        <div class="card">
                          <div class="card-header">
                            <h4 class="card-title mb-0">Upload Your National ID</h4>
                          </div>
                          <div class="card-body">
                            <p class="text-muted">Upload Front Side And Back Side</p>
                            <input type="file" class="filepond filepond-input-multiple" multiple name="filepond" data-allow-reorder="true" data-max-file-size="3MB" data-max-files="3" required>
                            <!-- Add a div for upload progress that will be created dynamically -->
                          </div>
                        </div>
                      </div>
                    </div>
                    <!-- Company Fields -->
                    <div id="companyFields" class="mt-4" style="display: none;">
                      <label for="taxNumber" class="form-label">Enter your Tax Number:</label>
                      <input type="text" id="taxNumber" class="form-control" name="taxNumber" placeholder="Example: 1234567890" required>
                      <label for="companyDocs" class="form-label mt-3">Upload Company Papers:</label>
                      <div class="col-lg-12">
                        <div class="card">
                          <div class="card-header">
                            <h4 class="card-title mb-0">Upload Papers</h4>
                          </div>
                          <div class="card-body">
                            <p class="text-muted">Please Upload All Papers</p>
                            <input type="file" class="filepond filepond-input-multiple" multiple name="filepond" data-allow-reorder="true" data-max-file-size="3MB" data-max-files="10">
                            <!-- Add a div for upload progress that will be created dynamically -->
                          </div>
                        </div>
                      </div>
                    </div>
                    <div class="d-flex align-items-start gap-3 mt-4">
                      <button type="button" class="btn btn-outline-secondary previestab" data-previous="v-pills-payment-tab">
                        <i class="ri-arrow-left-line label-icon align-middle fs-16 me-2"></i> Back to Payment Method
                      </button>
                      <span class="photo-count ms-auto me-3" id="photoCount" style="display: none;">
                        <i class="ri-image-line"></i> <span>0</span> files
                      </span>
                      <button type="button" class="btn btn-dark-custom" id="submitButton">
                        Submit All <i class="ri-arrow-right-line label-icon align-middle fs-16 ms-2"></i>
                      </button>
                    </div>
                  </div>

                  <!-- Step 6: Finish -->
                  <div class="tab-pane fade" id="v-pills-finish" role="tabpanel" aria-labelledby="v-pills-finish-tab">
                    <div class="text-center pt-4 pb-2">
                      <div class="mb-4">
                        <lord-icon src="https://cdn.lordicon.com/lupuorrc.json" trigger="loop" colors="primary:#F39720,secondary:#333333" style="width:120px;height:120px"></lord-icon>
                      </div>
                      <h5>Your Account Setup is Completed!</h5>
                      <p class="text-muted">You will receive a confirmation email with details of your account setup.</p>
                      <div class="mt-4">
                        <a href="/dashboard" class="btn btn-primary-custom">Go to Dashboard</a>
                      </div>
                    </div>
                  </div>
                </div>
                <!-- end tab content -->
              </div>
            </div>
            <!-- end col -->
          </div>
          <!-- end row -->
        </form>
      </div>
    </div>
    <!-- end card -->
  </div>
  <% } else { %>
  <div class="col-xl-12">
<!-- Dashboard Overview Cards -->
<div class="row mb-4">
  <div class="col-12">
    <div class="card dashboard-card">
      <div class="card-header d-flex align-items-center">
        <h4 class="card-title mb-0">Today's Overview</h4>
        <div class="ms-auto">
          <span class="text-muted small">Last updated at <%= new Date().toLocaleTimeString() %></span>
        </div>
      </div>
      <div class="card-body">
        <div class="row g-3">
          <!-- In Progress Orders -->
          <div class="col-md-3">
            <div class="card border shadow-sm h-100">
              <div class="card-body">
                <div class="d-flex align-items-center mb-2">
                  <h6 class="text-muted mb-0">In Progress Orders</h6>
                  <i class="ri-information-line ms-2 text-muted" data-bs-toggle="tooltip" title="Orders currently being processed"></i>
                </div>
                <h2 class="mb-0 text-dark-custom"><%= dashboardData?.orderStats?.inProgressCount || 0 %></h2>
              </div>
            </div>
          </div>

          <!-- Heading to Customer -->
          <div class="col-md-3">
            <div class="card border shadow-sm h-100">
              <div class="card-body">
                <div class="d-flex align-items-center mb-2">
                  <h6 class="text-muted mb-0">Heading to Customer</h6>
                  <i class="ri-information-line ms-2 text-muted" data-bs-toggle="tooltip" title="Orders on the way to customers"></i>
                </div>
                <h2 class="mb-0 text-dark-custom"><%= dashboardData?.orderStats?.headingToCustomerCount || 0 %></h2>
              </div>
            </div>
          </div>

          <!-- Completed Orders -->
          <div class="col-md-3">
            <div class="card border shadow-sm h-100">
              <div class="card-body">
                <div class="d-flex align-items-center mb-2">
                  <h6 class="text-muted mb-0">Completed Orders</h6>
                  <i class="ri-information-line ms-2 text-muted" data-bs-toggle="tooltip" title="Successfully delivered orders"></i>
                </div>
                <div class="d-flex align-items-baseline">
                    <h2 class="mb-0 text-success"><%= dashboardData?.orderStats?.completedCount || 0 %></h2>
                  <span class="text-muted ms-2">/ <%= dashboardData?.orderStats?.totalOrders|| 0 %></span>
                  <span class="badge bg-success ms-auto"><%= dashboardData?.orderStats?.completionRate || 0 %>%</span>
                </div>
              </div>
            </div>
          </div>

          <!-- Awaiting Action -->
          <div class="col-md-3">
            <div class="card border shadow-sm h-100">
              <div class="card-body">
                <div class="d-flex align-items-center mb-2">
                  <h6 class="text-muted mb-0">Awaiting Action</h6>
                  <i class="ri-information-line ms-2 text-muted" data-bs-toggle="tooltip" title="Orders requiring your attention"></i>
                </div>
                <h2 class="mb-0 text-primary-custom"><%= dashboardData?.orderStats?.awaitingActionCount || 0 %></h2>
              </div>
            </div>
          </div>

          <!-- Heading to you -->
          <div class="col-md-3">
            <div class="card border shadow-sm h-100">
              <div class="card-body">
                <div class="d-flex align-items-center mb-2">
                  <h6 class="text-muted mb-0">Heading to you</h6>
                  <i class="ri-information-line ms-2 text-muted" data-bs-toggle="tooltip" title="Returns being sent back to you"></i>
                </div>
                <h2 class="mb-0 text-dark-custom"><%= dashboardData?.orderStats?.headingToYouCount || 0 %></h2>
              </div>
            </div>
          </div>

          <!-- New Orders -->
          <div class="col-md-3">
            <div class="card border shadow-sm h-100">
              <div class="card-body">
                <div class="d-flex align-items-center mb-2">
                  <h6 class="text-muted mb-0">New Orders</h6>
                  <i class="ri-information-line ms-2 text-muted" data-bs-toggle="tooltip" title="Recently received orders"></i>
                </div>
                <h2 class="mb-0 text-primary-custom"><%= dashboardData?.orderStats?.newOrdersCount || 0 %></h2>
              </div>
            </div>
          </div>

          <!-- Expected Cash -->
          <!-- <div class="col-md-3">
            <div class="card border shadow-sm h-100">
              <div class="card-body">
                <div class="d-flex align-items-center mb-2">
                  <h6 class="text-muted mb-0">Expected Cash</h6>
                  <i class="ri-information-line ms-2 text-muted" data-bs-toggle="tooltip" title="Pending payments from delivered orders"></i>
                </div>
                <div class="d-flex align-items-baseline">
                  <h2 class="mb-0 text-dark-custom"><%= dashboardData?.financialStats?.expectedCash || 0 %></h2>
                  <span class="text-muted ms-2">EGP</span>
                </div>
              </div>
            </div>
          </div> -->

          <!-- Collected Cash -->
          <!-- <div class="col-md-3">
            <div class="card border shadow-sm h-100">
              <div class="card-body">
                <div class="d-flex align-items-center mb-2">
                  <h6 class="text-muted mb-0">Collected Cash</h6>
                  <i class="ri-information-line ms-2 text-muted" data-bs-toggle="tooltip" title="Payments received from orders"></i>
                </div>
                <div class="d-flex align-items-baseline">
                  <h2 class="mb-0 text-dark-custom"><%= dashboardData?.financialStats?.collectedCash || 0 %></h2>
                  <span class="text-muted ms-2">EGP</span>
                  <span class="badge bg-success ms-auto"><%= dashboardData?.financialStats?.collectionRate || 0 %>%</span>
                </div>
              </div>
            </div>
          </div> -->


        </div>
      </div>
    </div>
  </div>
</div>

<!-- Chart and Recent Orders Row -->
<div class="row">
  <!-- Chart -->
  <div class="col-xl-8">
    <div class="card dashboard-card">
      <div class="card-header">
        <h4 class="card-title mb-0">Revenue & Orders Analytics</h4>
      </div>
      <div class="card-body">
        <div id="revenue-chart" style="height: 350px;"></div>
      </div>
    </div>
  </div>

  <!-- Recent Orders -->
  <div class="col-xl-4">
    <div class="card dashboard-card">
      <div class="card-header">
        <h4 class="card-title mb-0">Recent Orders</h4>
      </div>
      <div class="card-body p-0">
        <div class="table-responsive">
          <table class="table table-borderless mb-0">
            <thead class="table-light">
              <tr>
                <th>Order ID</th>
                <th>Customer</th>
                <th>Status</th>
              </tr>
            </thead>
            <tbody>
              <% if (dashboardData?.recentData?.recentOrders?.length > 0) { %>
              <% dashboardData.recentData.recentOrders.forEach(order => { %>
              <tr>
                <td>#<%= order.orderNumber %></td>
                <td><%= order.orderCustomer?.fullName || 'N/A' %></td>
                <td>
                  <% let statusClass = ''; 
                         switch(order.orderStatus) {
                           case 'completed': statusClass = 'delivered'; break;
                           case 'new': statusClass = 'pending'; break;
                           case 'processing': case 'headingToCustomer': statusClass = 'processing'; break;
                           case 'cancelled': statusClass = 'cancelled'; break;
                           default: statusClass = 'pending';
                         } 
                      %>
                  <span class="order-status <%= statusClass %>"><%= order.orderStatus %></span>
                </td>
              </tr>
              <% }) %>
              <% } else { %>
              <tr>
                <td colspan="3" class="text-center py-3">No recent orders</td>
              </tr>
              <% } %>
            </tbody>
          </table>
        </div>
      </div>
      <div class="card-footer bg-transparent border-top-0">
        <div class="text-center">
          <a href="/business/orders" class="text-dark-custom">View All Orders <i class="ri-arrow-right-line align-middle"></i></a>
        </div>
      </div>
    </div>
  </div>
</div>

<div class="row">
  <!-- Recent Pickups -->
  <div class="col-xl-6">
    <div class="card dashboard-card">
      <div class="card-header">
        <h4 class="card-title mb-0">Recent Pickups</h4>
      </div>
      <div class="card-body">
        <div class="table-responsive">
          <table class="table table-borderless mb-0">
            <thead class="table-light">
              <tr>
                <th>Pickup ID</th>
                <th>Date</th>
                <th>Items</th>
                <th>Status</th>
              </tr>
            </thead>
            <tbody>
              <% if (dashboardData?.recentData?.recentPickups?.length > 0) { %>
              <% dashboardData.recentData.recentPickups.forEach(pickup => { %>
              <tr>
                <td>#<%= pickup.pickupNumber %></td>
                <td><%= new Date(pickup.pickupDate).toLocaleDateString() %></td>
                <td><%= pickup.numberOfOrders %></td>
                <td>
                  <% let statusClass = ''; 
                         switch(pickup.picikupStatus) {
                           case 'Completed': statusClass = 'delivered'; break;
                           case 'new': statusClass = 'pending'; break;
                           case 'In Progress': statusClass = 'processing'; break;
                           default: statusClass = 'pending';
                         }
                      %>
                  <span class="order-status <%= statusClass %>"><%= pickup.picikupStatus %></span>
                </td>
              </tr>
              <% }) %>
              <% } else { %>
              <tr>
                <td colspan="4" class="text-center py-3">No recent pickups</td>
              </tr>
              <% } %>
            </tbody>
          </table>
        </div>
      </div>
      <div class="card-footer bg-transparent border-top-0">
        <div class="text-center">
          <a href="/business/pickup" class="text-dark-custom">View All Pickups <i class="ri-arrow-right-line align-middle"></i></a>
        </div>
      </div>
    </div>
  </div>

  <!-- Performance Card -->
  <div class="col-xl-6">
    <div class="card dashboard-card">
      <div class="card-header">
        <h4 class="card-title mb-0">Performance Metrics</h4>
      </div>
      <div class="card-body">
        <div class="row">
          <div class="col-md-6">
            <div class="d-flex align-items-center mb-4">
              <div class="flex-shrink-0 me-3">
                <div class="avatar-sm">
                  <span class="avatar-title bg-neutral-light rounded">
                    <i class="ri-time-line text-primary-custom fs-4"></i>
                  </span>
                </div>
              </div>
              <div class="flex-grow-1">
                <h5 class="fs-15 mb-1">Average Delivery Time</h5>
                <p class="text-muted mb-0">2.3 days</p>
              </div>
            </div>
          </div>
          <div class="col-md-6">
            <div class="d-flex align-items-center mb-4">
              <div class="flex-shrink-0 me-3">
                <div class="avatar-sm">
                  <span class="avatar-title bg-neutral-light rounded">
                    <i class="ri-star-line text-dark-custom fs-4"></i>
                  </span>
                </div>
              </div>
              <div class="flex-grow-1">
                <h5 class="fs-15 mb-1">Customer Satisfaction</h5>
                <p class="text-muted mb-0">4.8/5</p>
              </div>
            </div>
          </div>
          <div class="col-md-6">
            <div class="d-flex align-items-center mb-4">
              <div class="flex-shrink-0 me-3">
                <div class="avatar-sm">
                  <span class="avatar-title bg-neutral-light rounded">
                    <i class="ri-repeat-line text-primary-custom fs-4"></i>
                  </span>
                </div>
              </div>
              <div class="flex-grow-1">
                <h5 class="fs-15 mb-1">Return Rate</h5>
                <p class="text-muted mb-0">2.1%</p>
              </div>
            </div>
          </div>
          <div class="col-md-6">
            <div class="d-flex align-items-center mb-4">
              <div class="flex-shrink-0 me-3">
                <div class="avatar-sm">
                  <span class="avatar-title bg-neutral-light rounded">
                    <i class="ri-user-heart-line text-dark-custom fs-4"></i>
                  </span>
                </div>
              </div>
              <div class="flex-grow-1">
                <h5 class="fs-15 mb-1">Repeat Customers</h5>
                <p class="text-muted mb-0">68%</p>
              </div>
            </div>
          </div>
        </div>
        <div class="mt-3">
          <div id="performance-chart" style="height: 200px;"></div>
        </div>
      </div>
    </div>
  </div>
</div>

</div>
<% } %>


<%- contentFor('FooterJs') %>
<script src="/assets/libs/filepond/filepond.min.js"></script>
<script src="/assets/libs/filepond-plugin-image-preview/filepond-plugin-image-preview.min.js"></script>
<script src="/assets/libs/filepond-plugin-file-validate-size/filepond-plugin-file-validate-size.min.js"></script>
<script src="/assets/libs/filepond-plugin-image-exif-orientation/filepond-plugin-image-exif-orientation.min.js"></script>
<script src="/assets/libs/filepond-plugin-file-encode/filepond-plugin-file-encode.min.js"></script>
<script src="/assets/libs/apexcharts/apexcharts.min.js"></script>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script src="/assets/js/pages/form-file-upload.init.js"></script>
<script src="/assets/rJS/business/main.js"></script>

<script>
// Add this to the existing script tag at the bottom, replacing the current chart initialization:

// Initialize Dashboard Charts if user is completed
if (document.getElementById('revenue-chart')) {
  const chartLabels = <%- JSON.stringify(dashboardData?.chartData?.monthlyLabels || []) %>;
  const revenueData = <%- JSON.stringify(dashboardData?.chartData?.monthlyRevenue || []) %>;
  const orderCountData = <%- JSON.stringify(dashboardData?.chartData?.monthlyOrderCounts || []) %>;
  
  const revenueChartOptions = {
    series: [{
      name: 'Revenue',
      type: 'column',
      data: revenueData
    }, {
      name: 'Orders',
      type: 'line',
      data: orderCountData
    }],
    chart: {
      height: 350,
      type: 'line',
      toolbar: {
        show: false
      }
    },
    stroke: {
      width: [0, 4],
      curve: 'smooth'
    },
    colors: ['#F39720', '#333333'],
    dataLabels: {
      enabled: true,
      enabledOnSeries: [1]
    },
    labels: chartLabels,
    xaxis: {
      type: 'category'
    },
    yaxis: [{
      title: {
        text: 'Revenue (EGP)',
      },
    }, {
      opposite: true,
      title: {
        text: 'Orders'
      }
    }]
  };

  const revenueChart = new ApexCharts(document.getElementById('revenue-chart'), revenueChartOptions);
  revenueChart.render();
}

  document.addEventListener('DOMContentLoaded', function() {
    // Initialize Bootstrap components
    const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
    tooltipTriggerList.map(function(tooltipTriggerEl) {
      return new bootstrap.Tooltip(tooltipTriggerEl);
    });

    // Helper function to check if an element is visible
    function isVisible(el) {
      return el && el.offsetParent !== null; // Ensures only displayed elements are considered
    }

    // Helper function to clear all input values inside a container
    function clearFormInputs(container) {
      if (!container) return;
      const inputs = container.querySelectorAll('input, select, textarea');
      inputs.forEach((input) => {
        if (input.type === 'checkbox' || input.type === 'radio') {
          input.checked = false;
        } else {
          input.value = '';
        }
        input.classList.remove('is-invalid'); // Remove validation errors when clearing
      });
    }

    // Validate only the visible required fields in the current tab
    function validateCurrentStep(currentTabPane) {
      let isValid = true;
      const requiredElements = currentTabPane.querySelectorAll(
        'input[required], select[required], textarea[required]'
      );

      requiredElements.forEach((el) => {
        if (!isVisible(el)) {
          return; // Skip hidden elements
        }

        if (el.type === 'radio') {
          const groupName = el.name;
          const radioGroup = currentTabPane.querySelectorAll(
            `input[name="${groupName}"]`
          );
          const groupChecked = Array.from(radioGroup).some(
            (radio) => radio.checked
          );

          if (!groupChecked) {
            isValid = false;
            // Find the parent container for styling
            const parentContainer = el.closest('.row');
            if (parentContainer) {
              parentContainer.querySelectorAll('.card').forEach(card => {
                card.classList.add('border-danger');
              });
            }
          } else {
            // Remove error styling
            const parentContainer = el.closest('.row');
            if (parentContainer) {
              parentContainer.querySelectorAll('.card').forEach(card => {
                card.classList.remove('border-danger');
              });
            }
          }
        } else {
          if (!el.value.trim()) {
            isValid = false;
            el.classList.add('is-invalid');
          } else {
            el.classList.remove('is-invalid');
          }
        }
      });

      return isValid;
    }

    // Mark step as completed
    function markStepAsDone(tabId) {
      const tabLink = document.querySelector(`button[data-bs-target="#${tabId}"]`);
      if (tabLink) {
        const icon = tabLink.querySelector('.step-icon');
        if (icon) {
          icon.classList.remove('ri-close-circle-fill');
          icon.classList.add('ri-check-circle-fill', 'text-primary-custom');
        }
      }
    }

    // Function to activate a specific tab
    function activateTab(tabId) {
      const tabElement = document.getElementById(tabId);
      if (!tabElement) return;

      // Get the tab button
      const tabButton = document.querySelector(`[data-bs-target="#${tabId}"]`);
      if (!tabButton) return;

      // Remove active class from all tabs and tab panes
      document.querySelectorAll('.nav-link').forEach(tab => {
        tab.classList.remove('active');
        tab.setAttribute('aria-selected', 'false');
      });

      document.querySelectorAll('.tab-pane').forEach(pane => {
        pane.classList.remove('show', 'active');
      });

      // Add active class to the selected tab and tab pane
      tabButton.classList.add('active');
      tabButton.setAttribute('aria-selected', 'true');
      tabElement.classList.add('show', 'active');
    }

    // Initialize form steps
    document.querySelectorAll('.form-steps').forEach((formSteps) => {
      // Handle next tab navigation
      formSteps.querySelectorAll('.nexttab').forEach((nextBtn) => {
        nextBtn.addEventListener('click', function(e) {
          e.preventDefault();

          const currentTabPane = formSteps.querySelector('.tab-pane.show.active');
          if (!currentTabPane) return;

          const currentTabId = currentTabPane.getAttribute('id');

          // Validate current step
          if (!validateCurrentStep(currentTabPane)) {
            Swal.fire({
              title: 'Validation Error',
              text: 'Please complete all required fields before continuing.',
              icon: 'error',
              confirmButtonText: 'OK'
            });
            return;
          }

          // Mark current step as done
          markStepAsDone(currentTabId);

          // Get next tab ID
          const nextTabId = this.getAttribute('data-nexttab');
          if (!nextTabId) return;

          // Get the actual tab element
          const nextTabButton = document.getElementById(nextTabId);
          if (nextTabButton) {
            // Enable the next tab if it was disabled
            nextTabButton.classList.remove('disabled');
            nextTabButton.removeAttribute('disabled');

            // Activate the next tab
            nextTabButton.click();
          }
        });
      });

      // Handle previous tab navigation
      formSteps.querySelectorAll('.previestab').forEach((prevBtn) => {
        prevBtn.addEventListener('click', function(e) {
          e.preventDefault();

          const previousTabId = this.getAttribute('data-previous');
          if (!previousTabId) return;

          const previousTabButton = document.getElementById(previousTabId);
          if (previousTabButton) {
            previousTabButton.click();
          }
        });
      });

      // Payment Method Selection
      formSteps.querySelectorAll('.payment-option').forEach((paymentOption) => {
        paymentOption.addEventListener('click', function() {
          // Remove active class from all payment options
          formSteps.querySelectorAll('.payment-option').forEach((option) => {
            option.classList.remove('active');
          });

          // Add active class to the clicked option
          this.classList.add('active');

          // Hide all payment details
          document.querySelectorAll('.payment-detail').forEach((detail) => {
            detail.style.display = 'none';
            clearFormInputs(detail);
          });

          // Show the relevant payment details
          const method = this.getAttribute('data-value');
          if (method) {
            const detailDiv = document.getElementById(method + 'Details');
            if (detailDiv) {
              detailDiv.style.display = 'block';
              document.getElementById('paymentDetails').style.display = 'block';
            }
          }

          // Check the radio input
          const radioInput = this.querySelector('.payment-radio');
          if (radioInput) {
            radioInput.checked = true;
          }
        });
      });

      // Brand Type Selection
      formSteps.querySelectorAll('.brand-option').forEach((brandOption) => {
        brandOption.addEventListener('click', function() {
          // Remove active class from all brand options
          formSteps.querySelectorAll('.brand-option').forEach((option) => {
            option.classList.remove('active');
          });

          // Add active class to the clicked option
          this.classList.add('active');

          // Get the brand type
          const brandType = this.getAttribute('data-value');
          const personalFields = document.getElementById('personalFields');
          const companyFields = document.getElementById('companyFields');

          // Show/hide fields based on selection
          if (brandType === 'personal') {
            if (companyFields) {
              clearFormInputs(companyFields);
              companyFields.style.display = 'none';
            }
            if (personalFields) {
              personalFields.style.display = 'block';
            }
          } else if (brandType === 'company') {
            if (personalFields) {
              clearFormInputs(personalFields);
              personalFields.style.display = 'none';
            }
            if (companyFields) {
              companyFields.style.display = 'block';
            }
          }

          // Check the radio input
          const radioInput = this.querySelector('.brand-radio');
          if (radioInput) {
            radioInput.checked = true;
          }
        });
      });

      // Social Media Channel Selection
      formSteps.querySelectorAll('.channel-checkbox').forEach((checkbox) => {
        checkbox.addEventListener('change', function() {
          const channelName = this.getAttribute('data-channel');
          const linkInput = document.getElementById(`${channelName}-link-input`);

          if (linkInput) {
            if (this.checked) {
              linkInput.classList.add('active');
            } else {
              linkInput.classList.remove('active');
              // Clear the input when unchecked
              const input = linkInput.querySelector('input');
              if (input) input.value = '';
            }
          }
        });
      });
    });

    // File Upload Handling
    const CLOUDINARY_URL = 'https://api.cloudinary.com/v1_1/dusod9wxt/upload';
    const CLOUDINARY_UPLOAD_PRESET = 'order_project';

    let uploadedPhotos = [];
    const photoCountDisplay = document.getElementById('photoCount');
    const submitButton = document.getElementById('submitButton');

    // Initialize FilePond
    FilePond.registerPlugin(
      FilePondPluginImagePreview,
      FilePondPluginFileValidateSize,
      FilePondPluginImageExifOrientation,
      FilePondPluginFileEncode
    );

    // Create FilePond instances
    document.querySelectorAll('.filepond-input-multiple').forEach((input) => {
      // Create a progress container for this input if it doesn't exist
      let progressContainer = document.createElement('div');
      progressContainer.className = 'upload-progress mt-2';
      progressContainer.style.display = 'none';

      let progressBar = document.createElement('div');
      progressBar.className = 'upload-progress-bar';
      progressBar.style.width = '0%';

      progressContainer.appendChild(progressBar);

      // Add the progress container after the input
      input.parentNode.appendChild(progressContainer);

      const pond = FilePond.create(input, {
        allowMultiple: true,
        maxFiles: input.getAttribute('data-max-files') || 5,
        maxFileSize: input.getAttribute('data-max-file-size') || '3MB',
        server: {
          process: (fieldName, file, metadata, load, error, progress, abort) => {
            // Show progress indicator
            progressContainer.style.display = 'block';

            // Create form data
            const formData = new FormData();
            formData.append('file', file);
            formData.append('upload_preset', CLOUDINARY_UPLOAD_PRESET);

            // Create and send XHR request
            const xhr = new XMLHttpRequest();
            xhr.open('POST', CLOUDINARY_URL, true);

            // Update progress
            xhr.upload.onprogress = (e) => {
              if (e.lengthComputable) {
                const percentComplete = (e.loaded / e.total) * 100;
                progress(percentComplete, {
                  type: 'upload',
                  value: percentComplete
                });

                progressBar.style.width = percentComplete + '%';
              }
            };

            // Handle response
            xhr.onload = function() {
              if (xhr.status >= 200 && xhr.status < 300) {
                const response = JSON.parse(xhr.responseText);
                uploadedPhotos.push(response.secure_url);

                // Update photo count display
                if (photoCountDisplay) {
                  photoCountDisplay.style.display = 'inline-flex';
                  photoCountDisplay.querySelector('span').textContent = uploadedPhotos.length;
                }

                load(response.secure_url);
              } else {
                error('Upload failed');
              }
            };

            // Handle error
            xhr.onerror = function() {
              error('Upload failed');
            };

            // Send the form data
            xhr.send(formData);

            // Return abort function
            return {
              abort: () => {
                xhr.abort();
                abort();
              }
            };
          }
        },
        labelIdle: 'Drag & Drop your files or <span class="filepond--label-action">Browse</span>',
        labelFileProcessing: 'Uploading',
        labelFileProcessingComplete: 'Upload Complete',
        labelTapToCancel: 'tap to cancel',
        labelTapToRetry: 'tap to retry',
        labelTapToUndo: 'tap to undo',
        onaddfile: (error, file) => {
          if (error) {
            console.error('Error adding file:', error);
            return;
          }
        },
        onremovefile: (error, file) => {
          if (error) {
            console.error('Error removing file:', error);
            return;
          }
        }
      });
    });

    // Form Submission
    const verificationForm = document.getElementById('verificationForm');
    if (verificationForm) {
      verificationForm.addEventListener('submit', async (e) => {
        e.preventDefault();

        const lastStep = document.querySelector('.tab-pane.show.active');
        if (!validateCurrentStep(lastStep)) {
          Swal.fire({
            title: 'Validation Error',
            text: 'Please complete all required fields before submitting.',
            icon: 'error',
            confirmButtonText: 'OK'
          });
          return;
        }

        // Show loading state
        Swal.fire({
          title: 'Processing',
          text: 'Submitting your information...',
          allowOutsideClick: false,
          didOpen: () => {
            Swal.showLoading();
          }
        });

        try {
          const formData = new FormData(verificationForm);
          const formObject = Object.fromEntries(formData.entries());

          // Add selling points
          const sellingPoints = [];
          const socialLinks = {};

          document.querySelectorAll('input[name="sellingPoints[]"]:checked').forEach((checkbox) => {
            const channel = checkbox.value;
            sellingPoints.push(channel);

            // Get the associated link if available
            const linkInput = document.getElementById(`${channel}-link`);
            if (linkInput && linkInput.value) {
              socialLinks[channel] = linkInput.value;
            }
          });

          formObject.sellingPoints = sellingPoints;
          formObject.socialLinks = socialLinks;

          // Add uploaded photos
          formObject.photosOfBrandType = uploadedPhotos;

          // Send data to server
          const response = await fetch('/business/completionConfirm', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify(formObject)
          });

          const data = await response.json();

          if (response.ok) {
            // Show success message
            Swal.fire({
              icon: 'success',
              title: 'Success!',
              text: data.message || 'Account Successfully Completed',
              confirmButtonText: 'OK'
            }).then((result) => {
              if (result.isConfirmed) {
                // Enable and activate the finish tab
                const finishTab = document.getElementById('v-pills-finish-tab');
                if (finishTab) {
                  finishTab.classList.remove('disabled');
                  finishTab.removeAttribute('disabled');
                  finishTab.click();
                }
                markStepAsDone('v-brand-type');
              }
            });
          } else {
            // Show error message
            Swal.fire({
              icon: 'error',
              title: 'Submission Failed',
              text: data.error || 'An error occurred. Please try again.',
              confirmButtonText: 'OK'
            });
          }
        } catch (err) {
          console.error('An error occurred:', err);
          Swal.fire({
            icon: 'error',
            title: 'Submission Failed',
            text: 'An error occurred. Please try again.',
            confirmButtonText: 'OK'
          });
        }
      });
    }

    // Submit button should trigger form submission
    if (submitButton) {
      submitButton.addEventListener('click', function(e) {
        e.preventDefault();

        // Trigger form submission
        const form = document.getElementById('verificationForm');
        if (form) {
          form.dispatchEvent(new Event('submit'));
        }
      });
    }

    // Email Verification
    const sendVerificationEmailBtn = document.getElementById('sendVerificationEmail');
    if (sendVerificationEmailBtn) {
      sendVerificationEmailBtn.addEventListener('click', async function() {
        try {
          // Show loading state
          sendVerificationEmailBtn.disabled = true;
          sendVerificationEmailBtn.innerHTML = '<i class="ri-loader-4-line animate-spin me-2"></i> Sending...';

          const response = await fetch('/business/request-verification');
          const data = await response.json();

          if (data.status === 'success') {
            Swal.fire({
              icon: 'success',
              title: 'Email Sent',
              text: 'Verification email sent successfully! Please check your inbox.',
              confirmButtonText: 'OK'
            });
          } else {
            Swal.fire({
              icon: 'error',
              title: 'Error',
              text: data.message || 'Failed to send verification email.',
              confirmButtonText: 'Try Again'
            });
          }
        } catch (error) {
          console.error('Error:', error);
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'An error occurred while sending the email.',
            confirmButtonText: 'Try Again'
          });
        } finally {
          // Reset button state
          sendVerificationEmailBtn.disabled = false;
          sendVerificationEmailBtn.innerHTML = '<i class="ri-mail-fill fs-5 me-2"></i> Send Verification Email';
        }
      });
    }

    // Initialize Dashboard Charts if user is completed
    if (document.getElementById('revenue-chart')) {
      const revenueChartOptions = {
        series: [{
          name: 'Revenue',
          type: 'column',
          data: [44, 55, 57, 56, 61, 58, 63, 60, 66]
        }, {
          name: 'Orders',
          type: 'line',
          data: [35, 41, 36, 26, 45, 48, 52, 53, 41]
        }],
        chart: {
          height: 350,
          type: 'line',
          toolbar: {
            show: false
          }
        },
        stroke: {
          width: [0, 4],
          curve: 'smooth'
        },
        colors: ['#F39720', '#333333'],
        dataLabels: {
          enabled: true,
          enabledOnSeries: [1]
        },
        labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep'],
        xaxis: {
          type: 'category'
        },
        yaxis: [{
          title: {
            text: 'Revenue ($)',
          },
        }, {
          opposite: true,
          title: {
            text: 'Orders'
          }
        }]
      };

      const revenueChart = new ApexCharts(document.getElementById('revenue-chart'), revenueChartOptions);
      revenueChart.render();
    }

    if (document.getElementById('performance-chart')) {
      const performanceChartOptions = {
        series: [{
          name: 'Performance',
          data: [75, 85, 65, 90, 82, 78]
        }],
        chart: {
          type: 'radar',
          height: 200,
          toolbar: {
            show: false
          }
        },
        colors: ['#F39720'],
        xaxis: {
          categories: ['Delivery', 'Quality', 'Service', 'Value', 'Satisfaction', 'Retention']
        },
        yaxis: {
          show: false
        },
        markers: {
          size: 4,
          colors: ['#333333'],
          strokeColors: '#fff',
          strokeWidth: 2,
        },
        tooltip: {
          y: {
            formatter: function(val) {
              return val + '%';
            }
          }
        }
      };

      const performanceChart = new ApexCharts(document.getElementById('performance-chart'), performanceChartOptions);
      performanceChart.render();
    }

    // Ensure first tab is active on page load
    document.getElementById('v-pills-bill-info-tab').click();
  });
</script>