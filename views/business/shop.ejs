<%- contentFor('HeaderCss') %>
<link href="/assets/libs/sweetalert2/sweetalert2.min.css" rel="stylesheet" type="text/css" />
<link rel="stylesheet" href="/assets/rCSS/business.css">
<%- contentFor('body') %>
<style>
  :root {
    --primary-color: #2A3950;
    --accent-color: #27AE60;
    --hover-color: #1F8B4D;
    --text-dark: #2C3E50;
    --text-light: #95A5A6;
  }

  .products-column {
    height: calc(100vh - 80px);
    overflow-y: auto;
    background-color: #ffffff;
    border: 1px solid rgb(234, 234, 234);
    border-radius: 10px;
    padding: 1px;
  }

  .product-card {
    display: flex;
    justify-content: space-between;
    align-items: center;
    background-color: #ffffff;
    border: 1px solid rgba(233, 233, 233, 0.684);
    border-radius: 2px;
    padding: 12px;
    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .product-card:hover {
    transform: translateY(-3px);
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.08);
  }

  .product-image {
    width: 64px;
    height: 64px;
    object-fit: cover;
    border-radius: 8px;
  }

  .price-tag {
    color: var(--accent-color);
    font-weight: 700;
  }

  .add-btn {
    background-color: var(--accent-color);
    color: white;
    border-radius: 8px;
    padding: 10px 24px;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    gap: 8px;
    border: none;
  }

  .add-btn:hover {
    background-color: var(--hover-color);
    transform: scale(1.02);
  }

  .cart-column {
    background: #F9FAFC;
    border-left: 1px solid #EBF0F5;
    height: calc(100vh - 80px);
    position: relative;
  }

  .cart-item {
    background: white;
    border-radius: 12px;
  }

  .quantity-control {
    display: flex;
    align-items: center;
    gap: 12px;
    background: #F8F9FA;
    border-radius: 8px;
    padding: 8px 16px;
  }

  .total-section {
    background: white;
    padding: 1.5rem;
    border-radius: 12px;
    box-shadow: 0 -4px 12px rgba(0, 0, 0, 0.03);
    position: sticky;
    bottom: 0;
    margin-top: auto;
  }

  .products-header {
    background-color: #fbfbfb;
    padding: 10px;
    border-bottom: 1px solid #ddd;
    border-radius: 10px 10px 0 0;
    position: sticky;
    top: -1%;
    z-index: 10;
  }
</style>

<div class="container-fluid ">
  <div class="row g-0">
    <!-- Products Column -->
    <div class="col-md-7 p-1">
      <div class="products-column" id="productsColumn">
        <div class="products-header d-flex justify-content-between align-items-center mb-1">
          <h4 class="mb-0">Choose Your Items</h4>
          <div class="d-flex gap-2">
            <input type="text" class="form-control" placeholder="Search for products..." id="searchInput">
            <select class="form-control" id="filterCriteria">
              <option value="">All Criteria</option>
              <option value="P0 < 4 Size">P0 < 4 Size</option>
              <option value="50 < 5 Size">50 < 5 Size</option>
              <option value="0 > 1 Size">0 > 1 Size</option>
              <option value="0 > 0 Size">0 > 0 Size</option>
            </select>
          </div>
        </div>

        <% const products = [
          {
            name: 'Medium Fiber',
            criteria: 'P0 < 4 Size',
            price: 45.99,
            icon: 'bi-box-seam',
            items: 10,
            image: 'fiber-medium.jpg'
          },
          {
            name: 'Large Fiber',
            criteria: '50 < 5 Size',
            price: 68.50,
            icon: 'bi-box-seam',
            items: 5,
            image: 'fiber-large.jpg'
          },
          {
            name: 'Luxury Fiber',
            criteria: '0 > 1 Size',
            price: 125.00,
            icon: 'bi-gem',
            items: 3,
            image: 'fiber-luxury.jpg'
          },
          {
            name: 'Luxury Fiber',
            criteria: '0 > 1 Size',
            price: 125.00,
            icon: 'bi-gem',
            items: 3,
            image: 'fiber-luxury.jpg'
          },
          {
            name: 'Luxury Fiber',
            criteria: '0 > 1 Size',
            price: 125.00,
            icon: 'bi-gem',
            items: 3,
            image: 'fiber-luxury.jpg'
          },
          {
            name: 'Luxury Fiber',
            criteria: '0 > 1 Size',
            price: 125.00,
            icon: 'bi-gem',
            items: 3,
            image: 'fiber-luxury.jpg'
          },
          {
            name: 'Luxury Fiber',
            criteria: '0 > 1 Size',
            price: 125.00,
            icon: 'bi-gem',
            items: 3,
            image: 'fiber-luxury.jpg'
          },
          {
            name: 'Luxury Fiber',
            criteria: '0 > 1 Size',
            price: 125.00,
            icon: 'bi-gem',
            items: 3,
            image: 'fiber-luxury.jpg'
          },
          {
            name: 'Luxury Fiber',
            criteria: '0 > 1 Size',
            price: 125.00,
            icon: 'bi-gem',
            items: 3,
            image: 'fiber-luxury.jpg'
          },
          {
            name: 'Luxury Fiber',
            criteria: '0 > 1 Size',
            price: 125.00,
            icon: 'bi-gem',
            items: 3,
            image: 'fiber-luxury.jpg'
          },
          {
            name: 'Premium Blend',
            criteria: '0 > 0 Size',
            price: 89.99,
            icon: 'bi-star',
            items: 7,
            image: 'fiber-premium.jpg'
          }
        ]; %>

        <% products.forEach(product => { %>
        <div class="product-card" data-criteria="<%= product.criteria %>">
          <div class="d-flex align-items-center gap-3">
            <img src="/assets/images/<%= product.image %>" alt="<%= product.name %>" class="product-image">
            <div>
              <h5 class="mb-1"><%= product.name %></h5>
              <small class="text-muted"><%= product.criteria %></small>
            </div>
          </div>
          <div>
            <span class="price-tag">$<%= product.price.toFixed(2) %></span>
          </div>
          <div>
            <%= product.items %> items
          </div>
          <div>
            <button class="add-btn" data-product="<%= product.name %>" data-price="<%= product.price %>">
              <i class="bi bi-plus-lg"></i>
              Add to Cart
            </button>
          </div>
        </div>
        <% }); %>
      </div>
    </div>

    <!-- Cart Column -->
    <div class="col-md-5 p-4 cart-column d-flex flex-column">
      <h4 class="mb-4">Order Summary</h4>

      <div id="cartItems" class="flex-grow-1 overflow-auto mb-3"></div>

      <div class="total-section">
        <div class="d-flex justify-content-between align-items-center mb-3">
          <h5>Total:</h5>
          <h4 class="mb-0" id="totalAmount">$0.00</h4>
        </div>
        <button class="btn btn-primary w-100 py-3" onclick="calculateTotal()">
          Calculate Total ($<span id="displayTotal">0.00</span>)
        </button>
      </div>
    </div>
  </div>
</div>

<%- contentFor('FooterJs') %>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
  document.addEventListener('DOMContentLoaded', () => {
    class CartManager {
      constructor() {
        this.cart = new Map();
        this.initEventListeners();
        this.updateUI();
      }

      initEventListeners() {
        document.querySelectorAll('.add-btn').forEach(btn => {
          btn.addEventListener('click', () => {
            const product = btn.dataset.product;
            const price = parseFloat(btn.dataset.price);
            if (!isNaN(price)) {
              this.addItem(product, price);
            } else {
              console.error('Invalid price:', btn.dataset.price);
            }
          });
        });

        document.getElementById('searchInput').addEventListener('input', this.filterProducts.bind(this));
        document.getElementById('filterCriteria').addEventListener('change', this.filterProducts.bind(this));
      }

      addItem(product, price) {
        const item = this.cart.get(product) || {
          qty: 0,
          price: price
        };
        item.qty++;
        this.cart.set(product, item);
        this.updateUI();
      }

      removeItem(product) {
        const item = this.cart.get(product);
        if (item && item.qty > 1) {
          item.qty--;
          this.cart.set(product, item);
        } else {
          this.cart.delete(product);
        }
        this.updateUI();
      }

      calculateTotal() {
        return Array.from(this.cart.values()).reduce((total, item) => {
          return total + (item.qty * item.price);
        }, 0);
      }

      updateUI() {
        const cartItems = document.getElementById('cartItems');
        cartItems.innerHTML = '';

        this.cart.forEach((item, product) => {
          if (item && typeof item.price === 'number') {
            const cartItem = document.createElement('div');
            cartItem.className = 'cart-item mb-3 p-3';
            cartItem.innerHTML = `
              <div class="d-flex justify-content-between align-items-center">
                <div>
                  <h5 class="mb-1">${product}</h5>
                  <p class="text-muted mb-0">$${item.price.toFixed(2)} each</p>
                </div>
                <div class="d-flex align-items-center gap-3">
                  <div class="quantity-control">
                    <button class="btn btn-sm text-danger" 
                            onclick="cartManager.removeItem('${product}')">âˆ’</button>
                    <span class="fw-bold mx-2">${item.qty}</span>
                    <button class="btn btn-sm text-success" 
                            onclick="cartManager.addItem('${product}', ${item.price})">+</button>
                  </div>
                  <div class="text-dark fw-bold">
                    $${(item.qty * item.price).toFixed(2)}
                  </div>
                </div>
              </div>
            `;
            cartItems.appendChild(cartItem);
          }
        });

        const total = this.calculateTotal();
        document.getElementById('totalAmount').textContent = `$${total.toFixed(2)}`;
        document.getElementById('displayTotal').textContent = total.toFixed(2);
      }

      filterProducts() {
        const searchInput = document.getElementById('searchInput').value.toLowerCase();
        const filterCriteria = document.getElementById('filterCriteria').value;

        document.querySelectorAll('.product-card').forEach(card => {
          const productName = card.querySelector('h5').textContent.toLowerCase();
          const productCriteria = card.dataset.criteria;

          const matchesSearch = productName.includes(searchInput);
          const matchesCriteria = !filterCriteria || productCriteria === filterCriteria;

          if (matchesSearch && matchesCriteria) {
            card.style.display = 'flex';
          } else {
            card.style.display = 'none';
          }
        });
      }
    }

    window.cartManager = new CartManager();
  });

  function calculateTotal() {
    const total = cartManager.calculateTotal();
    Swal.fire({
      title: 'Order Total',
      html: `<h3 class="text-success">$${total.toFixed(2)}</h3>`,
      icon: 'success',
      confirmButtonColor: '#27AE60',
      confirmButtonText: 'Confirm Order'
    });
  }

</script>
