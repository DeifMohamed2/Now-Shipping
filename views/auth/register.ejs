<%- contentFor('HeaderCss') %>
<%-include("../partials/title-meta", { "title" : "Register" }) %>
<style>
  @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');

  :root {
    --primary: #F39720;
    --secondary: #FDB614;
    --accent: #8FCAE5;
    --light: #FDDE00;
    --dark: #2B71B9;
    --neutral: #EFEICF;
    --white: #FFFFFF;
    --gray-100: #F9FAFB;
    --gray-200: #E5E7EB;
    --gray-300: #D1D5DB;
    --gray-400: #9CA3AF;
    --gray-500: #6B7280;
    --gray-800: #1F2937;
  }

  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  body {
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    background-color: var(--gray-100);
    margin: 0;
    padding: 0;
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    overflow-x: hidden;
  }

  /* Top Navbar Styles */
  .top-navbar {
    background-color: var(--white);
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 70px;
    z-index: 1000;
    display: flex;
    align-items: center;
  }

  .navbar-container {
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 100%;
    padding: 0 24px;
    max-width: 1400px;
    margin: 0 auto;
  }

  .navbar-brand {
    display: flex;
    align-items: center;
    text-decoration: none;
  }

  .navbar-logo {
    display: flex;
    align-items: center;
  }

  .navbar-logo svg {
    width: 32px;
    height: 32px;
    fill: var(--primary);
    margin-right: 12px;
  }

  .navbar-title {
    font-size: 20px;
    font-weight: 700;
    color: var(--gray-800);
    margin: 0;
  }

  .navbar-links {
    display: flex;
    align-items: center;
    gap: 8px;
  }

  .nav-link {
    color: var(--gray-500);
    text-decoration: none;
    font-size: 16px;
    font-weight: 500;
    padding: 8px 12px;
    border-radius: 6px;
    transition: all 0.2s ease;
  }

  .nav-link:hover {
    color: var(--primary);
    background-color: rgba(243, 151, 32, 0.05);
  }

  .nav-link.active {
    color: var(--primary);
    background-color: rgba(243, 151, 32, 0.1);
  }

  .navbar-actions {
    display: flex;
    align-items: center;
    gap: 12px;
  }

  /* Mobile menu */
  .mobile-menu {
    display: none;
    position: fixed;
    top: 70px;
    left: 0;
    width: 100%;
    background-color: var(--white);
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    z-index: 999;
    padding: 16px;
  }

  .mobile-menu-links {
    display: flex;
    flex-direction: column;
    gap: 12px;
    margin-bottom: 16px;
  }

  .mobile-menu-actions {
    display: flex;
    flex-direction: column;
    gap: 12px;
  }

  .mobile-menu-btn {
    display: none;
    background: transparent;
    border: none;
    color: var(--gray-500);
    font-size: 24px;
    cursor: pointer;
  }

  /* Register Container Styles */
  .register-container {
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    overflow: hidden;
    padding: 90px 20px 20px;
    /* Add top padding to account for navbar */
  }

  /* Background Animation Elements */
  .animated-background {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
    overflow: hidden;
    background-color: var(--gray-100);
    opacity: 0.8;
  }

  /* Truck animations */
  .truck {
    position: absolute;
    width: 120px;
    height: 60px;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 640 512'%3E%3Cpath fill='%232B71B9' d='M48 0C21.5 0 0 21.5 0 48V368c0 26.5 21.5 48 48 48H64c0 53 43 96 96 96s96-43 96-96H384c0 53 43 96 96 96s96-43 96-96h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V288 256 237.3c0-17-6.7-33.3-18.7-45.3L512 114.7c-12-12-28.3-18.7-45.3-18.7H416V48c0-26.5-21.5-48-48-48H48zM416 160h50.7L544 237.3V256H416V160zM112 416a48 48 0 1 1 96 0 48 48 0 1 1 -96 0zm368-48a48 48 0 1 1 0 96 48 48 0 1 1 0-96z'/%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-size: contain;
    opacity: 0.1;
  }

  .truck-1 {
    top: 10%;
    left: -120px;
    animation: truckMove1 20s linear infinite;
  }

  .truck-2 {
    top: 30%;
    right: -120px;
    transform: scaleX(-1);
    animation: truckMove2 25s linear infinite;
  }

  .truck-3 {
    bottom: 15%;
    left: -120px;
    animation: truckMove1 22s linear infinite 5s;
  }

  @keyframes truckMove1 {
    0% {
      left: -120px;
    }

    100% {
      left: 100%;
    }
  }

  @keyframes truckMove2 {
    0% {
      right: -120px;
    }

    100% {
      right: 100%;
    }
  }

  /* Package animations */
  .package {
    position: absolute;
    width: 40px;
    height: 40px;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 448 512'%3E%3Cpath fill='%23F39720' d='M50.7 58.5L0 160H208V32H93.7C75.5 32 58.9 42.3 50.7 58.5zM240 160H448L397.3 58.5C389.1 42.3 372.5 32 354.3 32H240V160zm208 32H0V416c0 35.3 28.7 64 64 64H384c35.3 0 64-28.7 64-64V192z'/%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-size: contain;
    opacity: 0.15;
  }

  .package-1 {
    top: 20%;
    left: 10%;
    animation: packageFloat 10s ease-in-out infinite;
  }

  .package-2 {
    top: 60%;
    right: 15%;
    animation: packageFloat 12s ease-in-out infinite 2s;
  }

  .package-3 {
    bottom: 30%;
    left: 30%;
    animation: packageFloat 14s ease-in-out infinite 1s;
  }

  .package-4 {
    top: 40%;
    right: 40%;
    animation: packageFloat 11s ease-in-out infinite 3s;
  }

  @keyframes packageFloat {

    0%,
    100% {
      transform: translateY(0) rotate(0deg);
    }

    50% {
      transform: translateY(-20px) rotate(5deg);
    }
  }

  /* Map route animation */
  .map-route {
    position: absolute;
    width: 100%;
    height: 2px;
    background: repeating-linear-gradient(90deg, var(--primary), var(--primary) 10px, transparent 10px, transparent 20px);
    opacity: 0.2;
  }

  .map-route-1 {
    top: 25%;
    animation: routeMove 30s linear infinite;
  }

  .map-route-2 {
    bottom: 35%;
    animation: routeMove 30s linear infinite reverse;
  }

  @keyframes routeMove {
    0% {
      background-position: 0 0;
    }

    100% {
      background-position: 1000px 0;
    }
  }

  /* Register Card Styles */
  .register-card {
    background-color: var(--white);
    border-radius: 12px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
    width: 100%;
    max-width: 480px;
    padding: 40px;
    position: relative;
    z-index: 10;
    animation: fadeIn 0.6s ease-out;
  }

  .register-header {
    text-align: center;
    margin-bottom: 32px;
  }

  .register-logo {
    margin-bottom: 16px;
    display: inline-block;
  }

  .register-logo svg {
    width: 48px;
    height: 48px;
    fill: var(--primary);
  }

  .register-title {
    font-size: 24px;
    font-weight: 700;
    color: var(--gray-800);
    margin-bottom: 8px;
  }

  .register-subtitle {
    font-size: 14px;
    color: var(--gray-500);
    margin-bottom: 0;
  }

  .register-form {
    margin-top: 24px;
  }

  .form-group {
    margin-bottom: 20px;
    animation: fadeIn 0.5s ease-out forwards;
    opacity: 0;
  }

  .form-group:nth-child(1) {
    animation-delay: 0.1s;
  }

  .form-group:nth-child(2) {
    animation-delay: 0.2s;
  }

  .form-group:nth-child(3) {
    animation-delay: 0.3s;
  }

  .form-group:nth-child(4) {
    animation-delay: 0.4s;
  }

  .form-group:nth-child(5) {
    animation-delay: 0.5s;
  }

  .form-group:nth-child(6) {
    animation-delay: 0.6s;
  }

  .form-label {
    display: block;
    font-size: 14px;
    font-weight: 500;
    color: var(--gray-800);
    margin-bottom: 8px;
  }

  .form-control {
    width: 100%;
    height: 44px;
    padding: 0 16px;
    font-size: 14px;
    border: 1px solid var(--gray-200);
    border-radius: 8px;
    background-color: var(--white);
    transition: all 0.2s ease;
  }

  .form-control:focus {
    outline: none;
    border-color: var(--primary);
    box-shadow: 0 0 0 3px rgba(243, 151, 32, 0.12);
  }

  /* Radio box styles */
  .radio-box-container {
    display: flex;
    gap: 16px;
    margin-bottom: 20px;
  }

  .radio-box {
    flex: 1;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 12px;
    border: 2px solid var(--gray-200);
    border-radius: 8px;
    padding: 16px;
    cursor: pointer;
    transition: all 0.2s ease;
    text-align: center;
  }

  .radio-box:hover {
    border-color: var(--primary);
    background-color: rgba(243, 151, 32, 0.05);
  }

  .radio-box.active {
    border-color: var(--primary);
    background-color: rgba(243, 151, 32, 0.1);
  }

  .radio-box input {
    display: none;
  }

  .radio-box i {
    font-size: 24px;
    color: var(--primary);
  }

  .radio-box span {
    font-size: 14px;
    font-weight: 500;
    color: var(--gray-800);
  }

  /* Form check styles */
  .form-check {
    display: flex;
    align-items: flex-start;
    margin-bottom: 20px;
  }

  .form-check-input {
    margin-right: 8px;
    margin-top: 2px;
    width: 16px;
    height: 16px;
    accent-color: var(--primary);
  }

  .form-check-label {
    font-size: 14px;
    color: var(--gray-500);
  }

  .form-check-label a {
    color: var(--primary);
    text-decoration: none;
    transition: color 0.2s ease;
  }

  .form-check-label a:hover {
    color: var(--secondary);
    text-decoration: underline;
  }

  /* Button styles */
  .btn-register {
    display: block;
    width: 100%;
    height: 44px;
    background: var(--primary);
    color: white;
    border: none;
    border-radius: 8px;
    font-size: 14px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.2s ease;
    position: relative;
    overflow: hidden;
    animation: fadeIn 0.5s ease-out forwards;
    animation-delay: 0.7s;
    opacity: 0;
  }

  .btn-register:hover {
    background: var(--secondary);
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(243, 151, 32, 0.2);
  }

  .btn-register:active {
    transform: translateY(0);
  }

  .login-link {
    text-align: center;
    margin-top: 24px;
    font-size: 14px;
    color: var(--gray-500);
    animation: fadeIn 0.5s ease-out forwards;
    animation-delay: 0.8s;
    opacity: 0;
  }

  .login-link a {
    color: var(--primary);
    text-decoration: none;
    font-weight: 500;
    transition: color 0.2s ease;
  }

  .login-link a:hover {
    color: var(--secondary);
    text-decoration: underline;
  }

  /* Success modal */
  .success-modal {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: 1100;
    align-items: center;
    justify-content: center;
    animation: fadeIn 0.3s ease-out;
  }

  .success-modal.show {
    display: flex;
  }

  .success-content {
    background-color: var(--white);
    border-radius: 12px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
    width: 100%;
    max-width: 400px;
    padding: 40px;
    text-align: center;
    animation: scaleIn 0.3s ease-out;
  }

  .success-icon {
    width: 80px;
    height: 80px;
    background-color: rgba(243, 151, 32, 0.1);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0 auto 24px;
  }

  .success-icon i {
    font-size: 40px;
    color: var(--primary);
  }

  .success-title {
    font-size: 24px;
    font-weight: 700;
    color: var(--gray-800);
    margin-bottom: 16px;
  }

  .success-message {
    font-size: 16px;
    color: var(--gray-500);
    margin-bottom: 24px;
  }

  .success-btn {
    display: inline-block;
    padding: 10px 24px;
    background: var(--primary);
    color: white;
    border: none;
    border-radius: 8px;
    font-size: 14px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.2s ease;
    text-decoration: none;
  }

  .success-btn:hover {
    background: var(--secondary);
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(243, 151, 32, 0.2);
  }

  /* Animations */
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(10px);
    }

    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes scaleIn {
    from {
      opacity: 0;
      transform: scale(0.9);
    }

    to {
      opacity: 1;
      transform: scale(1);
    }
  }

  /* Ripple effect */
  .ripple {
    position: absolute;
    border-radius: 50%;
    transform: scale(0);
    animation: ripple 0.6s linear;
    background-color: rgba(255, 255, 255, 0.3);
  }

  @keyframes ripple {
    to {
      transform: scale(4);
      opacity: 0;
    }
  }

  /* Responsive styles */
  @media (max-width: 992px) {

    .navbar-links,
    .navbar-actions {
      display: none;
    }

    .mobile-menu-btn {
      display: block;
    }

    .mobile-menu.open {
      display: block;
    }
  }

  @media (max-width: 576px) {
    .register-card {
      padding: 30px 20px;
    }

    .radio-box-container {
      flex-direction: column;
    }
  }

  /* Form validation styles */
  .is-invalid {
    border-color: #dc3545 !important;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' fill='none' viewBox='0 0 12 12'%3E%3Cpath fill='%23DC3545' d='M6 0a6 6 0 1 0 0 12A6 6 0 0 0 6 0zm0 9a1 1 0 1 1 0-2 1 1 0 0 1 0 2zm1-3H5V2h2v4z'/%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-position: right 12px center;
    padding-right: 40px;
  }

  .invalid-feedback {
    display: none;
    color: #dc3545;
    font-size: 0.875rem;
    margin-top: 0.25rem;
  }

  /* Loading animation */
  .btn-loading {
    position: relative;
    color: transparent;
  }

  .btn-loading::after {
    content: "";
    position: absolute;
    width: 20px;
    height: 20px;
    top: 50%;
    left: 50%;
    margin: -10px 0 0 -10px;
    border: 2px solid rgba(255, 255, 255, 0.3);
    border-top-color: white;
    border-radius: 50%;
    animation: spin 0.8s linear infinite;
  }

  @keyframes spin {
    to {
      transform: rotate(360deg);
    }
  }

  /* Phone input styles */
  .phone-input-container {
    display: flex;
    align-items: center;
  }

  .country-code {
    display: flex;
    align-items: center;
    height: 44px;
    padding: 0 12px;
    background-color: var(--gray-100);
    border: 1px solid var(--gray-200);
    border-right: none;
    border-radius: 8px 0 0 8px;
    font-size: 14px;
    font-weight: 500;
  }

  .country-code img {
    width: 20px;
    height: 15px;
    margin-right: 8px;
  }

  .phone-input {
    border-radius: 0 8px 8px 0;
  }
</style>

<%- contentFor('body') %>
<!-- Top Navbar -->
<nav class="top-navbar">
  <div class="navbar-container">
    <a href="/" class="navbar-brand">
      <div class="navbar-logo">
        <svg viewBox="0 0 100 100">
          <path d="M50,15 L60,25 L75,20 L75,40 L90,50 L75,60 L75,80 L60,75 L50,85 L40,75 L25,80 L25,60 L10,50 L25,40 L25,20 L40,25 Z M50,35 C41.7,35 35,41.7 35,50 C35,58.3 41.7,65 50,65 C58.3,65 65,58.3 65,50 C65,41.7 58.3,35 50,35 Z"></path>
        </svg>
      </div>
      <h1 class="navbar-title">Now Shipping</h1>
    </a>

    <div class="navbar-links">
      <!-- <a href="#" class="nav-link">Home</a>
      <a href="#" class="nav-link">Services</a>
      <a href="#" class="nav-link">Tracking</a>
      <a href="#" class="nav-link">About Us</a>
      <a href="#" class="nav-link">Contact</a> -->
    </div>

    <div class="navbar-actions">
      <a href="#" class="btn-outline">Help</a>
      <a href="#" class="btn-primary">Get Started</a>
    </div>

    <button class="mobile-menu-btn" id="mobile-menu-toggle">
      <i class="ri-menu-line"></i>
    </button>
  </div>
</nav>

<!-- Mobile menu -->
<div class="mobile-menu" id="mobile-menu">
  <div class="mobile-menu-links">
    <!-- <a href="#" class="nav-link">Home</a>
    <a href="#" class="nav-link">Services</a>
    <a href="#" class="nav-link">Tracking</a>
    <a href="#" class="nav-link">About Us</a>
    <a href="#" class="nav-link">Contact</a> -->
  </div>
  <div class="mobile-menu-actions">
    <a href="#" class="btn-outline">Help</a>
    <a href="#" class="btn-primary">Get Started</a>
  </div>
</div>

<!-- Animated Background -->
<div class="animated-background">
  <!-- Truck animations -->
  <div class="truck truck-1"></div>
  <div class="truck truck-2"></div>
  <div class="truck truck-3"></div>

  <!-- Package animations -->
  <div class="package package-1"></div>
  <div class="package package-2"></div>
  <div class="package package-3"></div>
  <div class="package package-4"></div>

  <!-- Map routes -->
  <div class="map-route map-route-1"></div>
  <div class="map-route map-route-2"></div>
</div>

<div class="register-container">
  <!-- Register card -->
  <div class="register-card">
    <div class="register-header">
      <div class="register-logo">
        <svg viewBox="0 0 100 100">
          <path d="M50,15 L60,25 L75,20 L75,40 L90,50 L75,60 L75,80 L60,75 L50,85 L40,75 L25,80 L25,60 L10,50 L25,40 L25,20 L40,25 Z M50,35 C41.7,35 35,41.7 35,50 C35,58.3 41.7,65 50,65 C58.3,65 65,58.3 65,50 C65,41.7 58.3,35 50,35 Z"></path>
        </svg>
      </div>
      <h1 class="register-title">Create Account</h1>
      <p class="register-subtitle">Sign up to start using Now Shipping</p>
    </div>

    <form id="registerForm" class="register-form">
      <div class="form-group">
        <label for="fullName" class="form-label">Full Name</label>
        <input type="text" class="form-control" id="fullName" name="fullName" placeholder="Enter your full name" required>
        <div class="invalid-feedback" id="fullName-feedback"></div>
      </div>

      <div class="form-group">
        <label for="phoneNumber" class="form-label">Phone Number</label>
        <div class="phone-input-container">
          <div class="country-code">
            <img src="assets/images/flags/eg.svg" alt="Egypt flag" height="15">
            <span>+20</span>
          </div>
          <input type="text" class="form-control phone-input" id="phoneNumber" name="phoneNumber" placeholder="01155244145" required>
        </div>
        <div class="invalid-feedback" id="phoneNumber-feedback"></div>
      </div>

      <div class="form-group">
        <label for="email" class="form-label">Email</label>
        <input type="email" class="form-control" id="email" name="email" placeholder="Enter your email" required>
        <div class="invalid-feedback" id="email-feedback"></div>
      </div>

      <div class="form-group">
        <label for="password" class="form-label">Password</label>
        <input type="password" class="form-control" id="password" name="password" placeholder="Create a password" required>
        <div class="invalid-feedback" id="password-feedback"></div>
      </div>

      <!-- <div class="form-group">
        <label class="form-label">Shipping Option</label>
        <div class="radio-box-container">
          <label class="radio-box" for="usingNowShipping">
            <i class="ri-truck-line"></i>
            <span>Using Now Shipping</span>
            <input type="radio" name="shippingOption" id="usingNowShipping" value="business" checked>
          </label>

          <label class="radio-box" for="shipper">
            <i class="ri-motorbike-line"></i>
            <span>Shipper</span>
            <input type="radio" name="shippingOption" id="shipper" value="shipper">
          </label>
        </div>
      </div> -->

      <div class="form-check">
        <input class="form-check-input" type="checkbox" name="storageCheck" id="storageOption">
        <label class="form-check-label" for="storageOption">
          I want storage
        </label>
      </div>

      <div class="form-check">
        <input class="form-check-input" type="checkbox" name="termsCheck" id="termsCheck" required>
        <label class="form-check-label" for="termsCheck">
          I agree to the <a href="/terms" target="_blank">terms and conditions</a>
        </label>
        <div class="invalid-feedback" id="terms-feedback"></div>
      </div>

      <button type="submit" class="btn-register" id="submitBtn">
        <span class="btn-text">Create Account</span>
      </button>
    </form>

    <div class="login-link">
      Already have an account? <a href="/login">Sign in</a>
    </div>
  </div>
</div>

<!-- Success Modal -->
<div class="success-modal" id="successModal">
  <div class="success-content">
    <div class="success-icon">
      <i class="ri-checkbox-circle-line"></i>
    </div>
    <h2 class="success-title">Registration Successful!</h2>
    <p class="success-message">Your account has been created successfully. You can now log in to access your account.</p>
    <a href="/login" class="success-btn">Go to Login</a>
  </div>
</div>


<!-- Faild Modal -->

<div class="success-modal" id="faildModal">
  <div class="success-content">
    <div class="success-icon">
      <i class="ri-error-warning-line"></i>
    </div>
    <h2 class="success-title">Registration Failed!</h2>
    <p class="success-message">Email Already In Use.</p>
    <button class="success-btn" onclick="document.getElementById('faildModal').classList.remove('show')">Ok</button>
  </div>
</div>



<%- contentFor('FooterJs') %>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<!-- <script src="/assets/rJS/register.js"></script> -->

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Mobile menu toggle
    const mobileMenuToggle = document.getElementById('mobile-menu-toggle');
    const mobileMenu = document.getElementById('mobile-menu');

    if (mobileMenuToggle && mobileMenu) {
      mobileMenuToggle.addEventListener('click', function() {
        mobileMenu.classList.toggle('open');
        this.innerHTML = mobileMenu.classList.contains('open') ?
          '<i class="ri-close-line"></i>' :
          '<i class="ri-menu-line"></i>';
      });

      // Close mobile menu on window resize (if screen becomes larger)
      window.addEventListener('resize', function() {
        if (window.innerWidth > 992) {
          mobileMenu.classList.remove('open');
          mobileMenuToggle.innerHTML = '<i class="ri-menu-line"></i>';
        }
      });
    }

    // Radio box selection
    const radioBoxes = document.querySelectorAll('.radio-box');

    radioBoxes.forEach(box => {
      const input = box.querySelector('input[type="radio"]');

      // Set initial active state
      if (input.checked) {
        box.classList.add('active');
      }

      box.addEventListener('click', function() {
        // Remove active class from all boxes
        radioBoxes.forEach(b => b.classList.remove('active'));

        // Add active class to clicked box
        this.classList.add('active');

        // Check the radio input
        input.checked = true;
      });
    });

    // Form validation
    const registerForm = document.getElementById('registerForm');
    const fullNameInput = document.getElementById('fullName');
    const phoneNumberInput = document.getElementById('phoneNumber');
    const emailInput = document.getElementById('email');
    const passwordInput = document.getElementById('password');
    const termsCheck = document.getElementById('termsCheck');

    const fullNameFeedback = document.getElementById('fullName-feedback');
    const phoneNumberFeedback = document.getElementById('phoneNumber-feedback');
    const emailFeedback = document.getElementById('email-feedback');
    const passwordFeedback = document.getElementById('password-feedback');
    const termsFeedback = document.getElementById('terms-feedback');

    if (registerForm) {
      registerForm.addEventListener('submit',async function(e) {
        e.preventDefault();
        let isValid = true;

        // Full name validation
        if (fullNameInput.value.trim() === '') {
          showInputError(fullNameInput, fullNameFeedback, 'Please enter your full name');
          isValid = false;
        } else {
          clearInputError(fullNameInput, fullNameFeedback);
        }

        // Phone number validation
        if (phoneNumberInput.value.trim() === '' || !/^\d{11}$/.test(phoneNumberInput.value.trim())) {
          showInputError(phoneNumberInput, phoneNumberFeedback, 'Plekase enter a valid 11-digit phone number');
          isValid = false;
        } else {
          clearInputError(phoneNumberInput, phoneNumberFeedback);
        }

        // Email validation
        if (!validateEmail(emailInput.value)) {
          showInputError(emailInput, emailFeedback, 'Please enter a valid email address');
          isValid = false;
        } else {
          clearInputError(emailInput, emailFeedback);
        }

        // Password validation
        if (passwordInput.value.length < 8) {
          showInputError(passwordInput, passwordFeedback, 'Password must be at least 8 characters');
          isValid = false;
        } else {
          clearInputError(passwordInput, passwordFeedback);
        }

        // Terms validation
        if (!termsCheck.checked) {
          termsCheck.classList.add('is-invalid');
          if (termsFeedback) {
            termsFeedback.textContent = 'You must agree to the terms and conditions';
            termsFeedback.style.display = 'block';
          }
          isValid = false;
        } else {
          termsCheck.classList.remove('is-invalid');
          if (termsFeedback) {
            termsFeedback.style.display = 'none';
          }
        }

        if (isValid) {
          // Show loading state
          const submitBtn = document.getElementById('submitBtn');
          submitBtn.classList.add('btn-loading');
          submitBtn.disabled = true;

          // Simulate form submission (replace with actual API call)


        try {
            const formData = new FormData(registerForm);
            const formObject = Object.fromEntries(formData.entries());
            console.log(formObject);

            const response = await fetch('/signup', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(formObject),
            });

            const data = await response.json();
            console.log(data);
            if (response.ok) {
                // Show success modal
                document.getElementById('successModal').classList.add('show');

                // Reset form
                registerForm.reset();
                submitBtn.classList.remove('btn-loading');
                submitBtn.disabled = false;

            } else {
              console.log(data);
              // Show error modal
              document.getElementById('faildModal').classList.add('show');

              // Reset form
              registerForm.reset();
              submitBtn.classList.remove('btn-loading');
              submitBtn.disabled = false;

            }
        } catch (err) {
          console.log(err)
              // Show error modal
              document.getElementById('faildModal').classList.add('show');

              // Reset form
              registerForm.reset();
              submitBtn.classList.remove('btn-loading');
              submitBtn.disabled = false;
      
        }finally{
          // Reset form
          registerForm.reset();
          submitBtn.classList.remove('btn-loading');
          submitBtn.disabled = false;
            
        }



        }
      });

      // Input validation on blur
      fullNameInput.addEventListener('blur', function() {
        if (this.value.trim() === '') {
          showInputError(this, fullNameFeedback, 'Please enter your full name');
        } else {
          clearInputError(this, fullNameFeedback);
        }
      });

      phoneNumberInput.addEventListener('blur', function() {
        if (this.value.trim() === '' || !/^\d{11}$/.test(this.value.trim())) {
          showInputError(this, phoneNumberFeedback, 'Please enter a valid 11-digit phone number');
        } else {
          clearInputError(this, phoneNumberFeedback);
        }
      });

      emailInput.addEventListener('blur', function() {
        if (this.value && !validateEmail(this.value)) {
          showInputError(this, emailFeedback, 'Please enter a valid email address');
        } else {
          clearInputError(this, emailFeedback);
        }
      });

      passwordInput.addEventListener('blur', function() {
        if (this.value && this.value.length < 8) {
          showInputError(this, passwordFeedback, 'Password must be at least 8 characters');
        } else {
          clearInputError(this, passwordFeedback);
        }
      });

      // Only allow numbers in phone input
      phoneNumberInput.addEventListener('input', function() {
        this.value = this.value.replace(/[^0-9]/g, '');
      });
    }

    // Helper functions
    function validateEmail(email) {
      const re = /^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
      return re.test(String(email).toLowerCase());
    }

    function showInputError(input, feedback, message) {
      input.classList.add('is-invalid');
      if (feedback) {
        feedback.textContent = message;
        feedback.style.display = 'block';
      }
    }

    function clearInputError(input, feedback) {
      input.classList.remove('is-invalid');
      if (feedback) {
        feedback.style.display = 'none';
      }
    }

    // Create dynamic truck animations
    function createExtraTrucks() {
      const background = document.querySelector('.animated-background');

      // Create additional trucks with random positions and speeds
      for (let i = 0; i < 3; i++) {
        const truck = document.createElement('div');
        truck.classList.add('truck');

        const isLeftToRight = Math.random() > 0.5;
        const verticalPosition = Math.random() * 70 + 15; // Between 15% and 85%
        const animationDuration = Math.random() * 10 + 15; // Between 15s and 25s
        const delay = Math.random() * 5; // Between 0s and 5s

        truck.style.top = `${verticalPosition}%`;

        if (isLeftToRight) {
          truck.style.left = '-120px';
          truck.style.animation = `truckMove1 ${animationDuration}s linear infinite ${delay}s`;
        } else {
          truck.style.right = '-120px';
          truck.style.transform = 'scaleX(-1)';
          truck.style.animation = `truckMove2 ${animationDuration}s linear infinite ${delay}s`;
        }

        background.appendChild(truck);
      }
    }

    // Initialize extra trucks
    createExtraTrucks();

    // Ripple effect on button
    const registerButton = document.querySelector('.btn-register');

    if (registerButton) {
      registerButton.addEventListener('click', function(e) {
        const x = e.clientX - e.target.getBoundingClientRect().left;
        const y = e.clientY - e.target.getBoundingClientRect().top;

        const ripple = document.createElement('span');
        ripple.classList.add('ripple');
        ripple.style.left = `${x}px`;
        ripple.style.top = `${y}px`;

        this.appendChild(ripple);

        setTimeout(() => {
          ripple.remove();
        }, 600);
      });
    }
  });
</script>
