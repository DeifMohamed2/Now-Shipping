<%- contentFor('HeaderCss') %>
<link rel="stylesheet" href="/assets/rCSS/business.css">
<style>
  .dashboard-card{border-radius:1rem;box-shadow:0 4px 20px rgba(0,0,0,0.05);transition:all .3s ease;overflow:hidden}
  .dashboard-card:hover{transform:translateY(-5px);box-shadow:0 10px 25px rgba(0,0,0,0.1)}
  .order-status{display:inline-block;padding:.25rem .75rem;border-radius:2rem;font-size:.75rem;font-weight:600}
  .order-status.delivered{background:rgba(10,179,156,.1);color:#0ab39c}
  .order-status.pending{background:rgba(243,151,32,.1);color:#F39720}
  .order-status.processing{background:rgba(64,81,137,.1);color:#405189}
  .order-status.cancelled{background:rgba(220,53,69,.1);color:#dc3545}
  .text-primary-custom{color:#F39720!important}
  .bg-neutral-light{background:#f8f9fa!important}
  .btn-primary-custom{background:#F39720;border-color:#F39720;color:#fff}
  .btn-primary-custom:hover{background:#E58809;border-color:#E58809}
  .small-muted{font-size:.875rem;color:#6c757d}
</style>
<%- contentFor('body') %>

<div class="row">
  <div class="col">
    <div class="h-100">
      <div class="row mb-3">
        <div class="col-12">
          <div class="d-flex align-items-lg-center flex-lg-row flex-column">
            <div class="flex-grow-1">
              <% 
                const hour = new Date().getHours();
                let greeting = 'Good Evening';
                if (hour < 12) greeting = 'Good Morning';
                else if (hour < 18) greeting = 'Good Afternoon';
              %>
              <h4 class="fs-16 mb-1 fw-semibold"><%= greeting %>, Admin! ðŸ‘‹</h4>
              <p class="text-muted mb-0">Platform-wide analytics and live operations at a glance.</p>
            </div>
            <div class="mt-3 mt-lg-0">
              <a href="/admin/orders" class="btn btn-primary-custom">
                <i class="ri-file-list-3-line align-middle me-1"></i> Go to Orders
              </a>
            </div>
          </div>
        </div>
      </div>

      <!-- Top Analytics: Status, Category, Geography, Payments, Shipping, Couriers, Returns -->
      

      <div class="row mb-4">
        <div class="col-12">
          <div class="card dashboard-card">
            <div class="card-header d-flex align-items-center">
              <h4 class="card-title mb-0">Today's Overview</h4>
              <div class="ms-auto"><span class="text-muted small" id="adminLastUpdated">Loading...</span></div>
            </div>
            <div class="card-body">
              <div class="row g-3" id="adminDashboardStats">
                <div class="col-12 text-center py-4">
                  <div class="spinner-border text-primary" role="status"><span class="visually-hidden">Loading...</span></div>
                  <p class="mt-2 text-muted">Loading dashboard data...</p>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <div class="row">
        <div class="col-xl-8">
          <div class="card dashboard-card">
            <div class="card-header"><h4 class="card-title mb-0">Revenue & Orders Analytics</h4></div>
            <div class="card-body"><div id="admin-revenue-chart" style="height: 350px;"></div></div>
          </div>
        </div>
        <div class="col-xl-4">
          <div class="card dashboard-card">
            <div class="card-header"><h4 class="card-title mb-0">Operational Snapshot</h4></div>
            <div class="card-body p-0">
              <div class="table-responsive">
                <table class="table table-borderless mb-0">
                  <thead class="table-light"><tr><th>Metric</th><th class="text-end">Value</th></tr></thead>
                  <tbody id="adminOperationalSnapshot">
                    <tr><td class="small-muted">Loading...</td><td class="text-end">â€”</td></tr>
                  </tbody>
                </table>
              </div>
            </div>
          </div>
        </div>
      </div>

      <div class="row mt-3">
        <div class="col-xl-6">
          <div class="card dashboard-card">
            <div class="card-header"><h4 class="card-title mb-0">Recent Orders</h4></div>
            <div class="card-body p-0">
              <div class="table-responsive">
                <table class="table table-borderless mb-0">
                  <thead class="table-light"><tr><th>Order</th><th>Business</th><th>Status</th></tr></thead>
                  <tbody id="adminRecentOrders">
                    <tr><td colspan="3" class="text-center py-3">Loading...</td></tr>
                  </tbody>
                </table>
              </div>
            </div>
          </div>
        </div>
        <div class="col-xl-6">
          <div class="card dashboard-card">
            <div class="card-header"><h4 class="card-title mb-0">Recent Pickups</h4></div>
            <div class="card-body p-0">
              <div class="table-responsive">
                <table class="table table-borderless mb-0">
                  <thead class="table-light"><tr><th>Pickup</th><th>Date</th><th>Status</th></tr></thead>
                  <tbody id="adminRecentPickups">
                    <tr><td colspan="3" class="text-center py-3">Loading...</td></tr>
                  </tbody>
                </table>
              </div>
            </div>
          </div>
        </div>
      </div>

      <div class="row mt-3">
        <div class="col-xl-6">
          <div class="card dashboard-card">
            <div class="card-header"><h4 class="card-title mb-0">Performance Metrics</h4></div>
            <div class="card-body"><div id="admin-performance-chart" style="height: 200px;"></div></div>
          </div>
        </div>
        <div class="col-xl-6">
          <div class="card dashboard-card">
            <div class="card-header"><h4 class="card-title mb-0">Returns & Exceptions</h4></div>
            <div class="card-body p-0">
              <div class="table-responsive">
                <table class="table table-borderless mb-0">
                  <thead class="table-light"><tr><th>Type</th><th>Count</th><th class="text-end">Trend</th></tr></thead>
                  <tbody id="adminReturnsExceptions">
                    <tr><td class="small-muted">Loading...</td><td>â€”</td><td class="text-end">â€”</td></tr>
                  </tbody>
                </table>
              </div>
            </div>
          </div>
        </div>
      </div>

      <div class="row mt-3">
        <div class="col-xl-4">
          <div class="card dashboard-card">
            <div class="card-header"><h4 class="card-title mb-0">Orders by Status</h4></div>
            <div class="card-body"><div id="admin-orders-by-status" style="height: 280px;"></div></div>
          </div>
        </div>
        <div class="col-xl-4">
          <div class="card dashboard-card">
            <div class="card-header"><h4 class="card-title mb-0">Orders by Category</h4></div>
            <div class="card-body"><div id="admin-orders-by-category" style="height: 280px;"></div></div>
          </div>
        </div>
        <div class="col-xl-4">
          <div class="card dashboard-card">
            <div class="card-header"><h4 class="card-title mb-0">Top Governorates</h4></div>
            <div class="card-body"><div id="admin-orders-by-government" style="height: 280px;"></div></div>
          </div>
        </div>
      </div>

      <div class="row mt-3">
        <div class="col-xl-6">
          <div class="card dashboard-card">
            <div class="card-header"><h4 class="card-title mb-0">Payment Breakdown</h4></div>
            <div class="card-body"><div id="admin-amount-type" style="height: 260px;"></div></div>
          </div>
        </div>
        <div class="col-xl-6">
          <div class="card dashboard-card">
            <div class="card-header"><h4 class="card-title mb-0">Express vs Standard</h4></div>
            <div class="card-body"><div id="admin-express-breakdown" style="height: 260px;"></div></div>
          </div>
        </div>
      </div>

      <div class="row mt-3">
        <div class="col-xl-6">
          <div class="card dashboard-card">
            <div class="card-header"><h4 class="card-title mb-0">Courier Assignments (30d)</h4></div>
            <div class="card-body"><div id="admin-courier-assignments" style="height: 300px;"></div></div>
          </div>
        </div>
        <div class="col-xl-6">
          <div class="card dashboard-card">
            <div class="card-header"><h4 class="card-title mb-0">Return Rate by Month</h4></div>
            <div class="card-body"><div id="admin-returns-monthly" style="height: 300px;"></div></div>
          </div>
        </div>
      </div>

    </div>
  </div>
</div>
<%- contentFor('FooterJs') %>
<script src="/assets/libs/apexcharts/apexcharts.min.js"></script>
<script>
  document.addEventListener('DOMContentLoaded', function(){
    loadAdminDashboardData();
    initAdminCharts();
  });

  async function loadAdminDashboardData(){
    try{
      const res = await fetch('/admin/dashboard-data');
      const json = await res.json();
      if(json.status === 'success'){
        renderAdminStats(json.dashboardData);
        renderAdminTables(json.dashboardData);
        renderAdminOperationalSnapshot(json.dashboardData);
        renderAdminReturns(json.dashboardData);
        renderAdminBreakdowns(json.dashboardData);
        renderAdminAuxCharts(json.dashboardData);
        renderAdminRevenueOrders(json.dashboardData);
        updateAdminLastUpdated();
      }
    }catch(e){
      const stats = document.getElementById('adminDashboardStats');
      if(stats){
        stats.innerHTML = '<div class="col-12 text-center py-4"><i class="ri-error-warning-line text-danger fs-1"></i><p class="mt-2 text-muted">Failed to load dashboard data</p></div>';
      }
    }
  }

  function renderAdminStats(data){
    const stats = data.orderStats || {};
    const financial = data.financialStats || {};
    const couriers = data.courierStats || {};
    const returns = data.returnStats || {};
    const container = document.getElementById('adminDashboardStats');
    if(!container) return;
    container.innerHTML = `
      <div class="col-md-3"><div class="card border shadow-sm h-100"><div class="card-body"><div class="d-flex align-items-center mb-2"><h6 class="text-muted mb-0">Total Orders</h6></div><h2 class="mb-0">${stats.totalOrders || 0}</h2></div></div></div>
      <div class="col-md-3"><div class="card border shadow-sm h-100"><div class="card-body"><div class="d-flex align-items-center mb-2"><h6 class="text-muted mb-0">Completed</h6></div><div class="d-flex align-items-baseline"><h2 class="mb-0 text-success">${stats.completedCount || 0}</h2><span class="text-muted ms-2">/ ${stats.totalOrders || 0}</span><span class="badge bg-success ms-auto">${stats.completionRate || 0}%</span></div></div></div></div>
      <div class="col-md-3"><div class="card border shadow-sm h-100"><div class="card-body"><div class="d-flex align-items-center mb-2"><h6 class="text-muted mb-0">Heading to Customer</h6></div><h2 class="mb-0 text-primary-custom">${stats.headingToCustomerCount || 0}</h2></div></div></div>
      <div class="col-md-3"><div class="card border shadow-sm h-100"><div class="card-body"><div class="d-flex align-items-center mb-2"><h6 class="text-muted mb-0">Awaiting Action</h6></div><h2 class="mb-0 text-warning">${stats.awaitingActionCount || 0}</h2></div></div></div>
      <div class="col-md-3"><div class="card border shadow-sm h-100"><div class="card-body"><div class="d-flex align-items-center mb-2"><h6 class="text-muted mb-0">Heading to You</h6></div><h2 class="mb-0">${stats.headingToYouCount || 0}</h2></div></div></div>
      <div class="col-md-3"><div class="card border shadow-sm h-100"><div class="card-body"><div class="d-flex align-items-center mb-2"><h6 class="text-muted mb-0">New Orders</h6></div><h2 class="mb-0 text-primary-custom">${stats.newOrdersCount || 0}</h2></div></div></div>
      <div class="col-md-3"><div class="card border shadow-sm h-100"><div class="card-body"><div class="d-flex align-items-center mb-2"><h6 class="text-muted mb-0">Active Couriers</h6></div><h2 class="mb-0">${couriers.active || 0}</h2></div></div></div>
      <div class="col-md-3"><div class="card border shadow-sm h-100"><div class="card-body"><div class="d-flex align-items-center mb-2"><h6 class="text-muted mb-0">Revenue (EGP)</h6></div><h2 class="mb-0">${financial.totalRevenue || 0}</h2></div></div></div>
    `;
  }

  function renderAdminTables(data){
    const ordersTbody = document.getElementById('adminRecentOrders');
    const pickupsTbody = document.getElementById('adminRecentPickups');
    const recentOrders = data.recentData?.recentOrders || [];
    const recentPickups = data.recentData?.recentPickups || [];

    if(ordersTbody){
      if(recentOrders.length === 0){
        ordersTbody.innerHTML = '<tr><td colspan="3" class="text-center py-3">No recent orders</td></tr>';
      }else{
        ordersTbody.innerHTML = recentOrders.map(o=>{
          let statusClass = 'pending';
          switch(o.orderStatus){
            case 'completed': statusClass='delivered'; break;
            case 'processing':
            case 'headingToCustomer': statusClass='processing'; break;
            case 'cancelled': statusClass='cancelled'; break;
          }
          return `<tr>
            <td>#${o.orderNumber}</td>
            <td>${o.businessName || o.orderBusiness?.name || 'N/A'}</td>
            <td><span class="order-status ${statusClass}">${o.orderStatus}</span></td>
          </tr>`;
        }).join('');
      }
    }

    if(pickupsTbody){
      if(recentPickups.length === 0){
        pickupsTbody.innerHTML = '<tr><td colspan="3" class="text-center py-3">No recent pickups</td></tr>';
      }else{
        pickupsTbody.innerHTML = recentPickups.map(p=>{
          let statusClass = 'pending';
          switch(p.picikupStatus){
            case 'Completed': statusClass='delivered'; break;
            case 'In Progress': statusClass='processing'; break;
          }
          return `<tr>
            <td>#${p.pickupNumber}</td>
            <td>${new Date(p.pickupDate).toLocaleDateString()}</td>
            <td><span class="order-status ${statusClass}">${p.picikupStatus}</span></td>
          </tr>`;
        }).join('');
      }
    }
  }

  function renderAdminOperationalSnapshot(data){
    const el = document.getElementById('adminOperationalSnapshot');
    if(!el) return;
    const couriers = data.courierStats || {};
    const sla = data.slaStats || {};
    const issues = data.issueStats || {};
    el.innerHTML = `
      <tr><td>Couriers Online</td><td class="text-end">${couriers.online || 0}</td></tr>
      <tr><td>Avg. Delivery Time</td><td class="text-end">${sla.avgDeliveryDays || '-'} days</td></tr>
      <tr><td>Open Issues</td><td class="text-end">${issues.open || 0}</td></tr>
      <tr><td>Today Cancellations</td><td class="text-end">${issues.cancellationsToday || 0}</td></tr>
    `;
  }

  function renderAdminReturns(data){
    const el = document.getElementById('adminReturnsExceptions');
    if(!el) return;
    const r = data.returnStats || {};
    el.innerHTML = `
      <tr><td>Returns In-Process</td><td>${r.inProcess || 0}</td><td class="text-end">${r.inProcessTrend || 'â€”'}</td></tr>
      <tr><td>Returns Completed</td><td>${r.completed || 0}</td><td class="text-end">${r.completedTrend || 'â€”'}</td></tr>
      <tr><td>Failed Deliveries</td><td>${r.failedDeliveries || 0}</td><td class="text-end">${r.failedTrend || 'â€”'}</td></tr>
    `;
  }

  function updateAdminLastUpdated(){
    const el = document.getElementById('adminLastUpdated');
    if(el){ el.textContent = `Last updated at ${new Date().toLocaleTimeString()}`; }
  }

  function initAdminCharts(){
    setTimeout(()=>{
      // revenue chart is rendered once data loads via renderAdminRevenueOrders
      if(document.getElementById('admin-performance-chart')){
        const popts = { series:[{name:'Performance',data:[75,85,65,90,82,78]}], chart:{type:'radar',height:200,toolbar:{show:false}}, colors:['#F39720'], xaxis:{categories:['Delivery','Quality','Service','Value','Satisfaction','Retention']}, yaxis:{show:false}, markers:{size:4,colors:['#333333'],strokeColors:'#fff',strokeWidth:2}, tooltip:{y:{formatter:val=>val+'%'}} };
        new ApexCharts(document.getElementById('admin-performance-chart'), popts).render();
      }
    }, 500);
  }

  function renderAdminRevenueOrders(d){
    const el = document.getElementById('admin-revenue-chart');
    if(!el) return;
    const rev = d.financialStats?.revenueByMonth || [];
    const ord = d.financialStats?.ordersByMonth || [];
    const revMap = new Map(rev.map(r => [r._id.y + '-' + String(r._id.m).padStart(2,'0'), r.revenue]));
    const ordMap = new Map(
      (rev.map(r => [r._id.y + '-' + String(r._id.m).padStart(2,'0'), r.orders]))
      .concat(ord.map(o => [o._id.y + '-' + String(o._id.m).padStart(2,'0'), o.count]))
    );
    const keys = Array.from(new Set([...revMap.keys(), ...ordMap.keys()])).sort().slice(-9);
    const revSeries = keys.map(k => revMap.get(k) || 0);
    const ordSeries = keys.map(k => ordMap.get(k) || 0);
    const opts = { series:[{name:'Revenue',type:'column',data:revSeries},{name:'Orders',type:'line',data:ordSeries}], chart:{height:350,type:'line',toolbar:{show:false}}, stroke:{width:[0,4],curve:'smooth'}, colors:['#F39720','#333333'], dataLabels:{enabled:true,enabledOnSeries:[1]}, labels:keys, xaxis:{type:'category'}, yaxis:[{title:{text:'Revenue (EGP)'}},{opposite:true,title:{text:'Orders'}}] };
    new ApexCharts(el, opts).render();
  }

  function renderAdminBreakdowns(data){
    const b = data.breakdowns || {};
    // Orders by Status (donut)
    if(document.getElementById('admin-orders-by-status')){
      const labels = (b.byStatus||[]).map(x=>x._id||'Unknown');
      const series = (b.byStatus||[]).map(x=>x.count||0);
      new ApexCharts(document.getElementById('admin-orders-by-status'), {
        chart:{type:'donut',height:280}, labels, series, colors:['#405189','#0ab39c','#f7b84b','#f06548','#299cdb','#F39720','#6c757d']
      }).render();
    }
    // Orders by Category (pie)
    if(document.getElementById('admin-orders-by-category')){
      const labels = (b.byCategory||[]).map(x=>x._id||'Unknown');
      const series = (b.byCategory||[]).map(x=>x.count||0);
      new ApexCharts(document.getElementById('admin-orders-by-category'), {
        chart:{type:'pie',height:280}, labels, series, colors:['#0ab39c','#405189','#f7b84b','#198754','#f06548']
      }).render();
    }
    // Top Governorates (bar)
    if(document.getElementById('admin-orders-by-government')){
      const cats = (b.byGovernment||[]).map(x=>x._id||'N/A');
      const vals = (b.byGovernment||[]).map(x=>x.count||0);
      new ApexCharts(document.getElementById('admin-orders-by-government'), {
        chart:{type:'bar',height:280,toolbar:{show:false}},
        series:[{name:'Orders',data:vals}], xaxis:{categories:cats}, colors:['#F39720']
      }).render();
    }
    // Amount Types (bar)
    if(document.getElementById('admin-amount-type')){
      const cats = (b.amountType||[]).map(x=>x._id||'N/A');
      const vals = (b.amountType||[]).map(x=>x.count||0);
      new ApexCharts(document.getElementById('admin-amount-type'), {
        chart:{type:'bar',height:260,toolbar:{show:false}}, series:[{name:'Count',data:vals}], xaxis:{categories:cats}, colors:['#405189']
      }).render();
    }
    // Express breakdown (donut)
    if(document.getElementById('admin-express-breakdown')){
      const labels = (b.express||[]).map(x=> (x._id ? 'Express':'Standard'));
      const series = (b.express||[]).map(x=>x.count||0);
      new ApexCharts(document.getElementById('admin-express-breakdown'), {
        chart:{type:'donut',height:260}, labels, series, colors:['#F39720','#6c757d']
      }).render();
    }
  }

  function renderAdminAuxCharts(data){
    // Courier Assignments (horizontal bar)
    if(document.getElementById('admin-courier-assignments')){
      const items = data.courierStats?.assignments30d || [];
      const cats = items.map(i=>String(i._id).slice(-6));
      const vals = items.map(i=>i.count||0);
      new ApexCharts(document.getElementById('admin-courier-assignments'), {
        chart:{type:'bar',height:300,toolbar:{show:false}},
        plotOptions:{bar:{horizontal:true}},
        series:[{name:'Assignments',data:vals}], xaxis:{categories:cats}, colors:['#299cdb']
      }).render();
    }
    // Returns monthly (line)
    if(document.getElementById('admin-returns-monthly')){
      const items = data.returnStats?.monthly || [];
      const cats = items.map(i=> `${i._id.y}-${String(i._id.m).padStart(2,'0')}` ).reverse();
      const vals = items.map(i=> i.count||0).reverse();
      new ApexCharts(document.getElementById('admin-returns-monthly'), {
        chart:{type:'line',height:300,toolbar:{show:false}},
        stroke:{curve:'smooth',width:3}, series:[{name:'Returns',data:vals}], xaxis:{categories:cats}, colors:['#f06548']
      }).render();
    }
  }
</script>