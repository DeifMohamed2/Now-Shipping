<%- contentFor('HeaderCss') %>
<link href="/assets/libs/sweetalert2/sweetalert2.min.css" rel="stylesheet" type="text/css" />
<link href="/assets/libs/flatpickr/flatpickr.min.css" rel="stylesheet" type="text/css" />
<link rel="stylesheet" href="/assets/rCSS/admin.css">
<style>
  /* Core Styles */
  .business-card {
    cursor: pointer;
    border-radius: 12px;
    border: none;
    box-shadow: 0 4px 24px rgba(0, 0, 0, 0.06);
    transition: all 0.3s ease;
    overflow: hidden;
    height: 100%;
    position: relative;
  }

  .business-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 12px 30px rgba(0, 0, 0, 0.12);
  }

  .business-card .card-body {
    padding: 1.5rem;
  }

  .business-header {
    display: flex;
    align-items: flex-start;
    margin-bottom: 1.25rem;
    gap: 1rem;
  }

  .business-logo {
    width: 60px;
    height: 60px;
    border-radius: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: #fff;
    font-size: 1.5rem;
    font-weight: 700;
    flex-shrink: 0;
    overflow: hidden;
  }

  .business-logo img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .business-info {
    flex: 1;
  }

  .business-name {
    font-size: 1.125rem;
    font-weight: 700;
    margin-bottom: 0.25rem;
    color: #212529;
  }

  .business-industry {
    font-size: 0.875rem;
    color: #6c757d;
    margin-bottom: 0.5rem;
  }

  .business-meta {
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
  }

  .meta-item {
    display: flex;
    align-items: center;
    font-size: 0.8125rem;
    color: #6c757d;
  }

  .meta-item i {
    margin-right: 0.25rem;
    font-size: 0.875rem;
  }

  .business-stats {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 1rem;
    margin-bottom: 1rem;
  }

  .stat-box {
    background-color: #f8f9fa;
    border-radius: 8px;
    padding: 0.75rem;
    text-align: center;
  }

  .stat-value {
    font-size: 1.25rem;
    font-weight: 700;
    color: #405189;
    margin-bottom: 0.25rem;
  }

  .stat-label {
    font-size: 0.7rem;
    color: #6c757d;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  .business-footer {
    border-top: 1px solid #e9ecef;
    padding-top: 1rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .balance-info {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .balance-amount {
    font-size: 1.125rem;
    font-weight: 700;
    color: #0ab39c;
  }

  .balance-label {
    font-size: 0.75rem;
    color: #6c757d;
  }

  .status-badge {
    padding: 0.375rem 0.75rem;
    border-radius: 50px;
    font-size: 0.75rem;
    font-weight: 600;
  }

  .status-verified {
    background-color: #e6f7f5;
    color: #0ab39c;
  }

  .status-unverified {
    background-color: #fff8e6;
    color: #f7b84b;
  }

  .filter-section {
    background-color: #fff;
    border-radius: 12px;
    padding: 1.25rem;
    margin-bottom: 2rem;
    box-shadow: 0 4px 24px rgba(0, 0, 0, 0.06);
  }

  .search-box {
    position: relative;
  }

  .search-box i {
    position: absolute;
    left: 1rem;
    top: 50%;
    transform: translateY(-50%);
    color: #6c757d;
    font-size: 1.125rem;
  }

  .search-box .form-control {
    padding-left: 3rem;
    height: 48px;
    border-radius: 8px;
    border: 1px solid #e9ecef;
  }

  .search-box .form-control:focus {
    border-color: #405189;
    box-shadow: 0 0 0 0.2rem rgba(64, 81, 137, 0.1);
  }

  @media (max-width: 767.98px) {
    .business-stats {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  .empty-state {
    text-align: center;
    padding: 3rem 1rem;
  }

  .empty-state i {
    font-size: 4rem;
    color: #e9ecef;
    margin-bottom: 1rem;
  }

  .empty-state h5 {
    color: #6c757d;
    margin-bottom: 0.5rem;
  }

  .empty-state p {
    color: #adb5bd;
  }
</style>

<%- contentFor('body') %>
<!-- Page Title -->
<div class="row mb-4">
  <div class="col-12">
    <div class="d-flex justify-content-between align-items-center">
      <div>
        <h4 class="mb-1 fw-bold">Businesses Management</h4>
        <p class="text-muted mb-0">Manage and monitor all registered businesses</p>
      </div>
      <div>
        <span class="badge bg-soft-primary text-primary fs-6 px-3 py-2">
          <i class="ri-building-line me-1"></i>
          <span id="totalBusinessesCount">0</span> Total Businesses
        </span>
      </div>
    </div>
  </div>
</div>

<!-- Statistics Cards -->
<div class="row mb-4">
  <div class="col-lg-3 col-md-6 mb-3">
    <div class="card border-0 shadow-sm">
      <div class="card-body">
        <div class="d-flex align-items-center">
          <div class="flex-shrink-0">
            <div class="avatar-sm">
              <div class="avatar-title bg-soft-success text-success rounded fs-3">
                <i class="ri-check-double-line"></i>
              </div>
            </div>
          </div>
          <div class="flex-grow-1 ms-3">
            <p class="text-muted mb-1">Verified</p>
            <h4 class="mb-0" id="verifiedCount">0</h4>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="col-lg-3 col-md-6 mb-3">
    <div class="card border-0 shadow-sm">
      <div class="card-body">
        <div class="d-flex align-items-center">
          <div class="flex-shrink-0">
            <div class="avatar-sm">
              <div class="avatar-title bg-soft-warning text-warning rounded fs-3">
                <i class="ri-time-line"></i>
              </div>
            </div>
          </div>
          <div class="flex-grow-1 ms-3">
            <p class="text-muted mb-1">Pending</p>
            <h4 class="mb-0" id="pendingCount">0</h4>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="col-lg-3 col-md-6 mb-3">
    <div class="card border-0 shadow-sm">
      <div class="card-body">
        <div class="d-flex align-items-center">
          <div class="flex-shrink-0">
            <div class="avatar-sm">
              <div class="avatar-title bg-soft-info text-info rounded fs-3">
                <i class="ri-store-2-line"></i>
              </div>
            </div>
          </div>
          <div class="flex-grow-1 ms-3">
            <p class="text-muted mb-1">Storage Users</p>
            <h4 class="mb-0" id="storageCount">0</h4>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="col-lg-3 col-md-6 mb-3">
    <div class="card border-0 shadow-sm">
      <div class="card-body">
        <div class="d-flex align-items-center">
          <div class="flex-shrink-0">
            <div class="avatar-sm">
              <div class="avatar-title bg-soft-primary text-primary rounded fs-3">
                <i class="ri-user-add-line"></i>
              </div>
            </div>
          </div>
          <div class="flex-grow-1 ms-3">
            <p class="text-muted mb-1">This Month</p>
            <h4 class="mb-0" id="thisMonthCount">0</h4>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Search and Filters -->
<div class="row mb-4">
  <div class="col-lg-12">
    <div class="filter-section">
      <div class="row g-3">
        <!-- Search -->
        <div class="col-lg-4">
          <div class="search-box">
            <i class="ri-search-line"></i>
            <input type="text" id="searchInput" class="form-control" placeholder="Search by name, email, brand...">
          </div>
        </div>

        <!-- Status Filter -->
        <div class="col-lg-2">
          <select id="statusFilter" class="form-select">
            <option value="">All Status</option>
            <option value="verified">Verified</option>
            <option value="unverified">Unverified</option>
          </select>
        </div>

        <!-- Sort By -->
        <div class="col-lg-2">
          <select id="sortByFilter" class="form-select">
            <option value="createdAt">Newest First</option>
            <option value="name">Name A-Z</option>
            <option value="balance">Balance</option>
          </select>
        </div>

        <!-- Date Range -->
        <div class="col-lg-3">
          <input type="text" id="dateRangeFilter" class="form-control" placeholder="Select date range">
        </div>

        <!-- Reset Button -->
        <div class="col-lg-1">
          <button id="resetFilters" class="btn btn-light w-100">
            <i class="ri-refresh-line"></i>
          </button>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- All Businesses Grid -->
<div class="row" id="businessesContainer">
  <!-- Business cards will be loaded here -->
  <div class="col-12 text-center py-5">
    <div class="spinner-border text-primary" role="status">
      <span class="visually-hidden">Loading...</span>
    </div>
    <p class="mt-3 text-muted">Loading businesses...</p>
  </div>
</div>

<!-- Pagination -->
<div class="row">
  <div class="col-12">
    <nav aria-label="Page navigation">
      <ul class="pagination justify-content-center" id="paginationContainer">
        <!-- Pagination will be loaded here -->
      </ul>
    </nav>
  </div>
</div>

<%- contentFor('FooterJs') %>
<script src="/assets/libs/flatpickr/flatpickr.min.js"></script>
<script src="/assets/libs/sweetalert2/sweetalert2.min.js"></script>

<script>
  let currentPage = 1;
  let filters = {
    search: '',
    status: '',
    sortBy: 'createdAt',
    sortOrder: 'desc',
    dateFrom: '',
    dateTo: ''
  };

  // Initialize
  document.addEventListener("DOMContentLoaded", function() {
    initializeDatePicker();
    loadBusinesses();
    setupEventListeners();
  });

  // Initialize date picker
  function initializeDatePicker() {
    flatpickr("#dateRangeFilter", {
      mode: "range",
      dateFormat: "Y-m-d",
      onChange: function(selectedDates) {
        if (selectedDates.length === 2) {
          filters.dateFrom = selectedDates[0].toISOString().split('T')[0];
          filters.dateTo = selectedDates[1].toISOString().split('T')[0];
          currentPage = 1;
          loadBusinesses();
        }
      }
    });
  }

  // Setup event listeners
  function setupEventListeners() {
    // Search
    let searchTimeout;
    document.getElementById('searchInput').addEventListener('input', function() {
      clearTimeout(searchTimeout);
      searchTimeout = setTimeout(() => {
        filters.search = this.value;
        currentPage = 1;
        loadBusinesses();
      }, 500);
    });

    // Status filter
    document.getElementById('statusFilter').addEventListener('change', function() {
      filters.status = this.value;
      currentPage = 1;
      loadBusinesses();
    });

    // Sort by
    document.getElementById('sortByFilter').addEventListener('change', function() {
      filters.sortBy = this.value;
      currentPage = 1;
      loadBusinesses();
    });

    // Reset filters
    document.getElementById('resetFilters').addEventListener('click', function() {
      filters = {
        search: '',
        status: '',
        sortBy: 'createdAt',
        sortOrder: 'desc',
        dateFrom: '',
        dateTo: ''
      };
      document.getElementById('searchInput').value = '';
      document.getElementById('statusFilter').value = '';
      document.getElementById('sortByFilter').value = 'createdAt';
      document.getElementById('dateRangeFilter')._flatpickr.clear();
      currentPage = 1;
      loadBusinesses();
    });
  }

  // Load businesses
  async function loadBusinesses() {
    try {
      const params = new URLSearchParams({
        page: currentPage,
        limit: 12,
        ...filters
      });

      const response = await fetch(`/admin/get-businesses?${params}`);
      const data = await response.json();

      if (data.businesses) {
        renderBusinesses(data.businesses);
        renderPagination(data.pagination);
        updateStatistics(data.businesses);
      }
    } catch (error) {
      console.error('Error loading businesses:', error);
      showError('Failed to load businesses');
    }
  }

  // Render businesses
  function renderBusinesses(businesses) {
    const container = document.getElementById('businessesContainer');
    
    if (businesses.length === 0) {
      container.innerHTML = `
        <div class="col-12">
          <div class="empty-state">
            <i class="ri-building-line"></i>
            <h5>No businesses found</h5>
            <p>Try adjusting your filters</p>
          </div>
        </div>
      `;
      return;
    }

    container.innerHTML = businesses.map(business => `
      <div class="col-lg-6 col-xl-4 mb-4">
        <div class="card business-card" onclick="window.location.href='/admin/business-details/${business._id}'">
          <div class="card-body">
            <div class="business-header">
              <div class="business-logo">
                ${business.profileImage ? 
                  `<img src="${business.profileImage}" alt="${business.name}">` :
                  `${(business.brandInfo?.brandName || business.name).charAt(0).toUpperCase()}`
                }
              </div>
              <div class="business-info">
                <h6 class="business-name">${business.brandInfo?.brandName || business.name}</h6>
                <div class="business-industry">${business.brandInfo?.industry || 'Not specified'}</div>
                <div class="business-meta">
                  <div class="meta-item">
                    <i class="ri-mail-line"></i>
                    ${business.email}
                  </div>
                  <div class="meta-item">
                    <i class="ri-phone-line"></i>
                    ${business.phoneNumber}
                  </div>
                </div>
              </div>
            </div>

            <div class="business-stats">
              <div class="stat-box">
                <div class="stat-value">${business.stats?.totalOrders || 0}</div>
                <div class="stat-label">Orders</div>
              </div>
              <div class="stat-box">
                <div class="stat-value">${business.stats?.totalPickups || 0}</div>
                <div class="stat-label">Pickups</div>
              </div>
              <div class="stat-box">
                <div class="stat-value">${business.stats?.totalShopOrders || 0}</div>
                <div class="stat-label">Shop Orders</div>
              </div>
              <div class="stat-box">
                <div class="stat-value">${business.stats?.successRate || 0}%</div>
                <div class="stat-label">Success</div>
              </div>
            </div>

            <div class="business-footer">
              <div class="balance-info">
                <div>
                  <div class="balance-label">Current Balance</div>
                  <div class="balance-amount">${formatCurrency(business.balance || 0)}</div>
                </div>
              </div>
              <div>
                <span class="status-badge ${business.isVerified ? 'status-verified' : 'status-unverified'}">
                  <i class="ri-${business.isVerified ? 'check' : 'time'}-line me-1"></i>
                  ${business.isVerified ? 'Verified' : 'Pending'}
                </span>
              </div>
            </div>
          </div>
        </div>
      </div>
    `).join('');
  }

  // Render pagination
  function renderPagination(pagination) {
    const container = document.getElementById('paginationContainer');
    
    if (pagination.totalPages <= 1) {
      container.innerHTML = '';
      return;
    }

    let paginationHTML = '';
    
    // Previous button
    paginationHTML += `
      <li class="page-item ${pagination.currentPage === 1 ? 'disabled' : ''}">
        <a class="page-link" href="#" onclick="changePage(${pagination.currentPage - 1}); return false;">
          <i class="ri-arrow-left-s-line"></i>
        </a>
      </li>
    `;

    // Page numbers
    for (let i = 1; i <= pagination.totalPages; i++) {
      if (
        i === 1 ||
        i === pagination.totalPages ||
        (i >= pagination.currentPage - 2 && i <= pagination.currentPage + 2)
      ) {
        paginationHTML += `
          <li class="page-item ${i === pagination.currentPage ? 'active' : ''}">
            <a class="page-link" href="#" onclick="changePage(${i}); return false;">${i}</a>
          </li>
        `;
      } else if (i === pagination.currentPage - 3 || i === pagination.currentPage + 3) {
        paginationHTML += `<li class="page-item disabled"><span class="page-link">...</span></li>`;
      }
    }

    // Next button
    paginationHTML += `
      <li class="page-item ${pagination.currentPage === pagination.totalPages ? 'disabled' : ''}">
        <a class="page-link" href="#" onclick="changePage(${pagination.currentPage + 1}); return false;">
          <i class="ri-arrow-right-s-line"></i>
        </a>
      </li>
    `;

    container.innerHTML = paginationHTML;
  }

  // Update statistics
  function updateStatistics(businesses) {
    const verified = businesses.filter(b => b.isVerified).length;
    const unverified = businesses.filter(b => !b.isVerified).length;
    const storage = businesses.filter(b => b.isNeedStorage).length;
    
    const now = new Date();
    const thisMonth = businesses.filter(b => {
      const createdAt = new Date(b.createdAt);
      return createdAt.getMonth() === now.getMonth() && 
             createdAt.getFullYear() === now.getFullYear();
    }).length;

    document.getElementById('totalBusinessesCount').textContent = businesses.length;
    document.getElementById('verifiedCount').textContent = verified;
    document.getElementById('pendingCount').textContent = unverified;
    document.getElementById('storageCount').textContent = storage;
    document.getElementById('thisMonthCount').textContent = thisMonth;
  }

  // Change page
  function changePage(page) {
    currentPage = page;
    loadBusinesses();
    window.scrollTo({ top: 0, behavior: 'smooth' });
  }

  // Format currency
  function formatCurrency(amount) {
    return new Intl.NumberFormat('en-EG', {
      style: 'currency',
      currency: 'EGP',
      minimumFractionDigits: 0,
      maximumFractionDigits: 0
    }).format(amount);
  }

  // Show error
  function showError(message) {
    Swal.fire({
      icon: 'error',
      title: 'Error',
      text: message,
      confirmButtonColor: '#405189'
    });
  }
</script>
