<%- contentFor('HeaderCss') %>
<link href="/assets/libs/sweetalert2/sweetalert2.min.css" rel="stylesheet" type="text/css" />
<!-- Remix Icons -->
<link href="https://cdn.jsdelivr.net/npm/remixicon@3.5.0/fonts/remixicon.css" rel="stylesheet">

<%- contentFor('body') %>
<style>
  .order-card {
    border-radius: 10px;
    box-shadow: 0 2px 15px rgba(0, 0, 0, 0.08);
    overflow: hidden;
  }

  .order-header {
    background-color: #f8f9fa;
    border-bottom: 2px solid #F39720;
    padding: 16px 20px;
  }

  .order-status {
    display: inline-flex;
    align-items: center;
    padding: 6px 12px;
    border-radius: 50px;
    font-weight: 500;
    font-size: 0.85rem;
  }

  .status-new {
    background-color: #e3f2fd;
    color: #0d6efd;
  }

  .status-pickedUp {
    background-color: #e8f5e9;
    color: #198754;
  }

  .status-inStock {
    background-color: #fff8e1;
    color: #ffc107;
  }

  .status-inProgress {
    background-color: #e0f7fa;
    color: #0dcaf0;
  }

  .status-completed {
    background-color: #e8f5e9;
    color: #198754;
  }

  .status-canceled {
    background-color: #ffebee;
    color: #dc3545;
  }

  .status-rejected {
    background-color: #ffebee;
    color: #dc3545;
  }

  .status-returned {
    background-color: #fff8e1;
    color: #fd7e14;
  }

  .info-section {
    background-color: #ffffff;
    border-radius: 8px;
    box-shadow: 0 1px 5px rgba(0, 0, 0, 0.05);
    margin-bottom: 20px;
    overflow: hidden;
  }

  .info-header {
    padding: 15px 20px;
    background-color: #f8f9fa;
    border-bottom: 1px solid #e9ecef;
    display: flex;
    align-items: center;
  }

  .info-header i {
    margin-right: 10px;
    font-size: 1.2rem;
  }

  .info-body {
    padding: 20px;
  }

  .info-item {
    display: flex;
    margin-bottom: 12px;
  }

  .info-label {
    width: 40%;
    color: #6c757d;
    font-weight: 500;
  }

  .info-value {
    width: 60%;
    font-weight: 600;
    color: #212529;
  }

  .address-box {
    background-color: #f8f9fa;
    border-left: 4px solid #F39720;
    padding: 15px;
    border-radius: 4px;
    margin-bottom: 20px;
  }

  .payment-badge {
    display: inline-block;
    padding: 6px 12px;
    border-radius: 4px;
    font-weight: 500;
    font-size: 0.85rem;
    background-color: #f8f9fa;
    border: 1px solid #dee2e6;
  }

  .amount-display {
    font-size: 1.25rem;
    font-weight: 700;
    color: #F39720;
  }

  .product-box {
    border: 1px solid #e9ecef;
    border-radius: 8px;
    padding: 15px;
    margin-bottom: 15px;
    transition: all 0.2s ease;
  }

  .product-box:hover {
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
  }

  .product-box.replacement {
    border-left: 4px solid #0d6efd;
    background-color: #f8f9fa;
  }

  .action-buttons {
    display: flex;
    gap: 10px;
    flex-wrap: wrap;
  }

  .action-buttons .btn {
    flex: 1;
    min-width: 150px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .action-buttons .btn i {
    margin-right: 8px;
  }

  .timeline {
    position: relative;
    padding-left: 30px;
  }

  .timeline::before {
    content: '';
    position: absolute;
    left: 10px;
    top: 0;
    bottom: 0;
    width: 2px;
    background-color: #dee2e6;
  }

  .timeline-item {
    position: relative;
    padding-bottom: 20px;
  }

  .timeline-item:last-child {
    padding-bottom: 0;
  }

  .timeline-dot {
    position: absolute;
    left: -30px;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    background-color: #F39720;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 0.7rem;
  }

  .timeline-content {
    background-color: #f8f9fa;
    border-radius: 8px;
    padding: 15px;
  }

  .timeline-date {
    font-size: 0.85rem;
    color: #6c757d;
    margin-bottom: 5px;
  }

  .timeline-title {
    font-weight: 600;
    margin-bottom: 5px;
  }

  .timeline-notes {
    font-size: 0.9rem;
  }

  @media (max-width: 768px) {
    .action-buttons {
      flex-direction: column;
    }

    .action-buttons .btn {
      width: 100%;
    }

    .info-item {
      flex-direction: column;
    }

    .info-label,
    .info-value {
      width: 100%;
    }

    .info-label {
      margin-bottom: 5px;
    }
  }
</style>

<div class="row">
  <div class="col-lg-12">
    <div class="card order-card">
      <div class="card-header order-header d-flex align-items-center justify-content-between">
        <div>
          <h5 class="card-title mb-0">Order Details</h5>
          <p class="text-muted mb-0 mt-1">Order #<%= order?.orderNumber %></p>
        </div>
        <div class="d-flex gap-2">
          <% if (order) { %>
          <span class="order-status status-<%= order.orderStatus %>">
            <% 
                let statusText = order.orderStatus;
                if (statusText === 'new') statusText = 'New Order';
                else if (statusText === 'pickedUp') statusText = 'Picked Up';
                else if (statusText === 'inStock') statusText = 'In Stock';
                else if (statusText === 'inProgress') statusText = 'In Progress';
                else if (statusText === 'headingToCustomer') statusText = 'Heading To Customer';
                else if (statusText === 'headingToYou') statusText = 'Heading To You';
                else if (statusText === 'completed') statusText = 'Completed';
                else if (statusText === 'canceled') statusText = 'Canceled';
                else if (statusText === 'rejected') statusText = 'Rejected';
                else if (statusText === 'returned') statusText = 'Returned';
                else if (statusText === 'terminated') statusText = 'Terminated';
                else statusText = statusText.charAt(0).toUpperCase() + statusText.slice(1);
              %>
            <%= statusText %>
          </span>
          <% } %>
          <a href="/courier/orders" class="btn btn-outline-primary btn-sm">
            <i class="ri-arrow-left-line me-1"></i> Back to Orders
          </a>
        </div>
      </div>

      <div class="card-body">
        <% if (order) { %>
        <div class="row g-4">
          <!-- Left Column -->
          <div class="col-lg-8">
            <!-- Customer & Order Information -->
            <div class="info-section">
              <div class="info-header">
                <i class="ri-user-3-line text-primary"></i>
                <h6 class="mb-0">Customer & Order Information</h6>
              </div>
              <div class="info-body">
                <div class="row">
                  <div class="col-md-6">
                    <div class="info-item">
                      <div class="info-label">Customer Name:</div>
                      <div class="info-value"><%= order.orderCustomer.fullName %></div>
                    </div>
                    <!-- <div class="info-item">
                      <div class="info-label">Phone Number:</div>
                      <div class="info-value"><%= order.orderCustomer.phoneNumber %></div>
                    </div> -->
                    <div class="info-item">
                      <div class="info-label">Order Date:</div>
                      <div class="info-value"><%= new Date(order.orderDate).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' }) %></div>
                    </div>
                    <% if (order.referralNumber) { %>
                    <div class="info-item">
                      <div class="info-label">Referral Number:</div>
                      <div class="info-value"><%= order.referralNumber %></div>
                    </div>
                    <% } %>
                  </div>
                  <div class="col-md-6">
                    <div class="address-box">
                      <h6 class="mb-2"><i class="ri-map-pin-line me-2 text-primary"></i>Delivery Address</h6>
                      <p class="mb-2"><%= order.orderCustomer.address %></p>
                      <p class="mb-2"><%= order.orderCustomer.zone %>, <%= order.orderCustomer.government %></p>
                      <a href="https://maps.google.com/?q=<%= encodeURIComponent(order.orderCustomer.address + ', ' + order.orderCustomer.zone + ', ' + order.orderCustomer.government) %>" target="_blank" class="btn btn-sm btn-primary">
                        <i class="ri-map-pin-line me-1"></i> Navigate to Address
                      </a>
                    </div>
                    <% if (order.orderNotes) { %>
                    <div class="info-item">
                      <div class="info-label">Order Notes:</div>
                      <div class="info-value"><%= order.orderNotes %></div>
                    </div>
                    <% } %>
                  </div>
                </div>
              </div>
            </div>

            <!-- Order Items -->
            <div class="info-section">
              <div class="info-header">
                <i class="ri-shopping-bag-3-line text-primary"></i>
                <h6 class="mb-0">Order Items</h6>
              </div>
              <div class="info-body">
                <div class="product-box">
                  <div class="d-flex align-items-center mb-2">
                    <i class="ri-shopping-bag-line me-2 text-primary"></i>
                    <h6 class="mb-0">Items to Deliver</h6>
                  </div>
                  <div class="row g-3">
                    <div class="col-md-8">
                      <p class="text-muted small mb-1">Product Description:</p>
                      <p class="mb-0 fw-semibold"><%= order.orderShipping.productDescription %></p>
                    </div>
                    <div class="col-md-4">
                      <p class="text-muted small mb-1">Number of Items:</p>
                      <span class="badge bg-light text-dark border px-3 py-2 rounded-pill">
                        <%= order.orderShipping.numberOfItems %>
                      </span>
                    </div>
                  </div>
                </div>

                <% if (order.orderShipping.productDescriptionReplacement) { %>
                <div class="product-box replacement">
                  <div class="d-flex align-items-center mb-2">
                    <i class="ri-exchange-line me-2 text-primary"></i>
                    <h6 class="mb-0">Replacement Items</h6>
                  </div>
                  <div class="row g-3">
                    <div class="col-md-8">
                      <p class="text-muted small mb-1">Replacement Product Description:</p>
                      <p class="mb-0 fw-semibold"><%= order.orderShipping.productDescriptionReplacement %></p>
                    </div>
                    <div class="col-md-4">
                      <p class="text-muted small mb-1">Number of Replacement Items:</p>
                      <span class="badge bg-light text-dark border px-3 py-2 rounded-pill">
                        <%= order.orderShipping.numberOfItemsReplacement %>
                      </span>
                    </div>
                  </div>
                </div>
                <% } %>
              </div>
            </div>

          </div>

          <!-- Right Column -->
          <div class="col-lg-4">
            <!-- Payment Information -->
            <div class="info-section">
              <div class="info-header">
                <i class="ri-money-dollar-circle-line text-warning"></i>
                <h6 class="mb-0">Payment Information</h6>
              </div>
              <div class="info-body">
                <div class="mb-4">
                  <p class="text-muted mb-2">Payment Type:</p>
                  <div class="payment-badge">
                    <% if (order.orderShipping.amountType === 'COD') { %>
                    <i class="ri-cash-line me-1"></i> Cash on Delivery
                    <% } else if (order.orderShipping.amountType === 'CD') { %>
                    <i class="ri-exchange-dollar-line me-1"></i> Cash Difference
                    <% } else if (order.orderShipping.amountType === 'CC') { %>
                    <i class="ri-money-dollar-box-line me-1"></i> Cash Collection
                    <% } else { %>
                    <i class="ri-bank-card-line me-1"></i> <%= order.orderShipping.amountType %>
                    <% } %>
                  </div>
                </div>

                <% if (order.orderShipping.amount) { %>
                <div class="mb-4">
                  <p class="text-muted mb-2">
                    <% if (order.orderShipping.amountType === 'COD') { %>
                    Amount to Collect:
                    <% } else if (order.orderShipping.amountType === 'CD') { %>
                    Cash Difference:
                    <% } else if (order.orderShipping.amountType === 'CC') { %>
                    Cash Collection:
                    <% } else { %>
                    Amount:
                    <% } %>
                  </p>
                  <div class="amount-display">
                    <%= order.orderShipping.amount %> EGP
                  </div>
                </div>
                <% } %>

                <div>
                  <p class="text-muted mb-2">Order Type:</p>
                  <div class="payment-badge">
                    <% if (order.orderShipping.orderType === 'Deliver') { %>
                    <i class="ri-truck-line me-1"></i> Delivery
                    <% } else if (order.orderShipping.orderType === 'Return') { %>
                    <i class="ri-arrow-go-back-line me-1"></i> Return
                    <% } else if (order.orderShipping.orderType === 'Exchange') { %>
                    <i class="ri-exchange-line me-1"></i> Exchange
                    <% } else if (order.orderShipping.orderType === 'CashCollection') { %>
                    <i class="ri-money-dollar-box-line me-1"></i> Cash Collection
                    <% } else { %>
                    <i class="ri-shopping-bag-line me-1"></i> <%= order.orderShipping.orderType %>
                    <% } %>
                  </div>
                </div>
              </div>
            </div>

            <!-- Order Actions -->
            <% if (order.orderStatus !== 'completed' && order.orderStatus !== 'canceled' && order.orderStatus !== 'rejected' && order.orderStatus !== 'returned' && order.orderStatus !== 'terminated') { %>
              <div class="info-section">
                <div class="info-header">
                  <i class="ri-settings-4-line text-primary"></i>
                  <h6 class="mb-0">Order Actions</h6>
                </div>
                <div class="info-body">
                  <div class="action-buttons">
                    <button class="btn btn-success" id="completeOrderBtn" onclick="completeOrder('<%= order.orderNumber %>')">
                      <i class="ri-check-double-line"></i> Complete Delivery
                    </button>
                    <button class="btn btn-warning" id="customerUnavailableBtn" onclick="showOrderActions('<%= order._id %>', 'rejected', 'customer_not_available')">
                      <i class="ri-user-unfollow-line"></i> Customer Unavailable
                    </button>
                    <button class="btn btn-danger" id="rejectOrderBtn" onclick="showOrderActions('<%= order._id %>', 'rejected')">
                      <i class="ri-close-circle-line"></i> Reject Delivery
                    </button>
                  </div>
                </div>
              </div>
           <% } %>
            <!-- QR Code for Verification (Optional) -->
        
          </div>
        </div>
        <% } else { %>
        <!-- No Order Found -->
        <div class="text-center py-5">
          <img src="/assets/images/empty.svg" alt="" class="img-fluid" style="max-width: 220px;">
          <h4 class="mt-4">No Order Found</h4>
          <p class="text-muted mb-0">We couldn't find the order you are looking for.</p>
        </div>
        <% } %>
      </div>
    </div>
  </div>
</div>

<!-- Order Actions Modal -->
<div class="modal fade" id="orderActionsModal" tabindex="-1" aria-labelledby="orderActionsModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="orderActionsModalLabel">Delivery Actions</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form id="orderActionsForm">
          <input type="hidden" id="actionOrderId" name="actionOrderId" value="">
          <input type="hidden" id="actionType" name="actionType" value="">
          <div class="mb-3">
            <label for="actionReason" class="form-label">Reason</label>
            <select class="form-select" id="actionReason" name="actionReason">
              <option value="">Select a reason</option>
              <option value="customer_not_available">Customer not available</option>
              <option value="customer_rejected">Customer rejected delivery</option>
              <option value="wrong_address">Wrong address</option>
              <option value="damaged_package">Package damaged</option>
              <option value="other">Other</option>
            </select>
          </div>
          <div class="mb-3" id="otherReasonContainer" style="display: none;">
            <label for="otherReason" class="form-label">Specify reason</label>
            <textarea class="form-control" id="otherReason" name="otherReason" rows="3"></textarea>
          </div>
          <div class="d-flex justify-content-end gap-2">
            <button type="button" class="btn btn-light" data-bs-dismiss="modal">Cancel</button>
            <button type="button" class="btn btn-primary" id="confirmActionBtn">Confirm</button>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>

<%- contentFor('FooterJs') %>
<script src="/assets/libs/sweetalert2/sweetalert2.min.js"></script>
<script>
  document.addEventListener("DOMContentLoaded", function() {
    // Handle reason selection change
    document.getElementById('actionReason').addEventListener('change', function() {
      const otherReasonContainer = document.getElementById('otherReasonContainer');
      otherReasonContainer.style.display = this.value === 'other' ? 'block' : 'none';
    });

    // Confirm action button
    document.getElementById('confirmActionBtn').addEventListener('click', function() {
      processOrderAction();
    });
  });

  // Complete order
  function completeOrder(orderNumber) {
    Swal.fire({
      title: 'Complete Delivery', 
      text: 'Mark this order# as completed?',
      icon: 'question',
      showCancelButton: true,
      confirmButtonColor: '#28a745',
      cancelButtonColor: '#6c757d',
      confirmButtonText: 'Yes, complete it!'
    }).then(async(result) => {
      if (result.isConfirmed) {
        try {
          // Show loading
          Swal.fire({
            title: 'Processing...',
            text: 'Completing delivery',
            allowOutsideClick: false,
            didOpen: () => {
              Swal.showLoading();
            }
          });

          // Make API call to complete order
          const response = await fetch(`/courier/complete-order/${orderNumber}`, {
            method: 'PUT',
            headers: {
              'Content-Type': 'application/json'
            }
          });

          const data = await response.json();
          
          Swal.close();

          if (response.ok) {
            Swal.fire({
              icon: 'success',
              title: 'Delivery Completed',
              text: 'Order has been marked as delivered successfully.',
              timer: 2000
            }).then(() => {
              window.location.reload();
            });
          } else {
            Swal.fire({
              icon: 'error', 
              title: 'Error',
              text: data.message || 'Failed to complete delivery. Please try again.'
            });
          }

        } catch (error) {
          console.error('Error completing order:', error);
          Swal.fire({
            icon: 'error',
            title: 'Error', 
            text: 'An unexpected error occurred. Please try again.'
          });
        }
      }
    });
  }

  // Show order actions modal
  function showOrderActions(orderId, actionType, defaultReason = '') {
    document.getElementById('actionOrderId').value = orderId;
    document.getElementById('actionType').value = actionType;

    if (defaultReason) {
      document.getElementById('actionReason').value = defaultReason;

      // Show/hide other reason field
      const otherReasonContainer = document.getElementById('otherReasonContainer');
      otherReasonContainer.style.display = defaultReason === 'other' ? 'block' : 'none';
    } else {
      document.getElementById('actionReason').value = '';
      document.getElementById('otherReasonContainer').style.display = 'none';
    }

    // Show modal
    const modal = new bootstrap.Modal(document.getElementById('orderActionsModal'));
    modal.show();
  }

  // Process order action
  function processOrderAction() {
    const orderId = document.getElementById('actionOrderId').value;
    const actionType = document.getElementById('actionType').value;
    const reason = document.getElementById('actionReason').value;
    const otherReason = document.getElementById('otherReason').value;

    if (!reason) {
      Swal.fire({
        icon: 'warning',
        title: 'Select Reason',
        text: 'Please select a reason for this action.'
      });
      return;
    }

    if (reason === 'other' && !otherReason) {
      Swal.fire({
        icon: 'warning',
        title: 'Specify Reason',
        text: 'Please specify the reason for this action.'
      });
      return;
    }

    // Close modal
    const modal = bootstrap.Modal.getInstance(document.getElementById('orderActionsModal'));
    modal.hide();

    // Show loading
    Swal.fire({
      title: 'Processing...',
      text: 'Updating order status',
      allowOutsideClick: false,
      didOpen: () => {
        Swal.showLoading();
      }
    });

    // Make API call to update order status
    fetch(`/courier/update-order-status/${orderId}`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          status: actionType,
          reason: reason === 'other' ? otherReason : reason
        })
      })
      .then(response => response.json())
      .then(data => {
        Swal.close();
        if (data.success) {
          Swal.fire({
            icon: 'success',
            title: 'Status Updated',
            text: 'Order status has been updated successfully.',
            timer: 2000
          }).then(() => {
            window.location.reload();
          });
        } else {
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: data.message || 'Failed to update order status. Please try again.'
          });
        }
      })
      .catch(error => {
        console.error('Error updating order status:', error);
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: 'An unexpected error occurred. Please try again.'
        });
      });
  }
</script>